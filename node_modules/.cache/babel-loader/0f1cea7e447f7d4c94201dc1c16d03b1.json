{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Recipes/Recipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // react-bootstrap components\n\nimport { Badge, Button, Card, Navbar, Nav, Table, Container, Row, Col, Modal, Form } from \"react-bootstrap\";\nimport services from \"services\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useToast } from \"components/Toast\";\nimport Loader from \"components/Loader\";\n\nfunction Recipes() {\n  _s();\n\n  const toast = useToast();\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const [recipes, setRecipes] = useState([]);\n\n  const getData = async () => {\n    try {\n      let data = await services.RecipeService.getAllRecipes();\n      let recipes = data.response;\n      setRecipes(recipes);\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      console.log(\"err.response\", err.response);\n      toast.add(\"tr\", \"danger\", err.message || (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.code) || \"Something went wrong\");\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return !isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/admin/recipe/create\",\n            className: \"btn btn-fill  btn-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"nc-icon nc-simple-add mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), \"Add new\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: recipes.length ? /*#__PURE__*/_jsxDEV(Card, {\n            className: \"strpied-tabled-with-hover\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border-0\",\n                    children: \"ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border-0\",\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"border-0\",\n                    children: \"Go\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: recipes === null || recipes === void 0 ? void 0 : recipes.map((cat, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: cat.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: cat.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/admin/recipe/${cat.id}/edit`,\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-arrow-right\",\n                        color: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 25\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Recipe Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipes, \"fm8X7664kpK8QjgybfXn1lBz+gA=\", false, function () {\n  return [useToast, useDispatch];\n});\n\n_c = Recipes;\nexport default Recipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Recipes/Recipes.js"],"names":["React","useState","useEffect","Badge","Button","Card","Navbar","Nav","Table","Container","Row","Col","Modal","Form","services","Link","useSelector","useDispatch","useToast","Loader","Recipes","toast","dispatch","isLoading","setIsLoading","recipes","setRecipes","getData","data","RecipeService","getAllRecipes","response","err","console","log","add","message","code","length","map","cat","key","id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Table,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Form,\n} from \"react-bootstrap\";\nimport services from \"services\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useToast } from \"components/Toast\";\nimport Loader from \"components/Loader\";\n\nfunction Recipes() {\n  const toast = useToast();\n\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [recipes, setRecipes] = useState([]);\n  const getData = async () => {\n    try {\n      let data = await services.RecipeService.getAllRecipes();\n      let recipes = data.response;\n      setRecipes(recipes);\n    } catch (err) {\n      console.log(\"err.response\", err.response);\n\n      toast.add(\n        \"tr\",\n        \"danger\",\n        err.message || err?.response?.data?.code || \"Something went wrong\"\n      );\n    }\n\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return !isLoading ? (\n    <>\n      <Container fluid>\n        <Row>\n          <div className=\"col\">\n            <h2>Recipes</h2>\n          </div>\n          <div className=\"col-auto\">\n            <Link\n              to=\"/admin/recipe/create\"\n              className=\"btn btn-fill  btn-primary\"\n            >\n              <i className=\"nc-icon nc-simple-add mr-2\"></i>\n              Add new\n            </Link>\n          </div>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            {recipes.length ? (\n              <Card className=\"strpied-tabled-with-hover\">\n                <Table className=\"table-hover\">\n                  <thead>\n                    <tr>\n                      <th className=\"border-0\">ID</th>\n                      <th className=\"border-0\">Name</th>\n\n                      <th className=\"border-0\">Go</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {recipes?.map((cat, key) => (\n                      <tr key={key}>\n                        <td>{cat.id}</td>\n                        <td>{cat.name}</td>\n\n                        <td>\n                          <Link to={`/admin/recipe/${cat.id}/edit`}>\n                            <i\n                              className=\"fa fa-arrow-right\"\n                              color=\"primary\"\n                            ></i>\n                          </Link>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </Card>\n            ) : (\n              <p>No Recipe Found</p>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  ) : (\n    <Loader />\n  );\n}\n\nexport default Recipes;\n"]},"metadata":{},"sourceType":"module"}