{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport validate from \"services/validate.service\";\n\nconst useForm = (initialValues, callback) => {\n  _s();\n\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"h8M7iOaeokd5k3X/cr42CWDCCqw=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/hooks/useForm.js"],"names":["useState","useEffect","validate","useForm","initialValues","callback","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleSubmit","event","preventDefault","handleChange","persist","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AACA,MAAMC,OAAO,GAAG,CAACC,aAAD,EAAgBC,QAAhB,KAA6B;AAAA;;AAC3C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACI,aAAD,CAApC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAA/B,IAAoCJ,YAAxC,EAAsD;AACpDL,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACG,MAAD,CAJM,CAAT;;AAMA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXR,IAAAA,SAAS,CAACP,QAAQ,CAACI,MAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAJD;;AAMA,QAAMO,YAAY,GAAIF,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACG,OAAN;AACAZ,IAAAA,SAAS,CAAED,MAAD,KAAa,EACrB,GAAGA,MADkB;AAErB,OAACU,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAqBL,KAAK,CAACI,MAAN,CAAaE;AAFb,KAAb,CAAD,CAAT;AAID,GAND;;AAQA,SAAO;AACLJ,IAAAA,YADK;AAELH,IAAAA,YAFK;AAGLT,IAAAA,MAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CA/BD;;GAAML,O;;AAiCN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport validate from \"services/validate.service\";\nconst useForm = (initialValues, callback) => {\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues((values) => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n  };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}