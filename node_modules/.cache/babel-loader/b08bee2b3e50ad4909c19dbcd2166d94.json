{"ast":null,"code":"import HTTPClient from \"./http.services\"; // class FoodCategoriesService {\n\nclass UserTagsService {\n  getUserTags(page = 1, limit = 10) {\n    const endpoint = \"/admin/tags/listing\";\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(endpoint).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addUserTag(obj) {\n    const endpoint = \"/admin/tags/create\";\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(endpoint, obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  updateUserTag(obj) {\n    const endpoint = \"/admin/tags/update\";\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(endpoint, obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  } // deleteUserTag(obj) {\n  //   return new Promise((resolve, reject) => {\n  //     HTTPClient.post(\"\", obj)\n  //       .then((response) => {\n  //         resolve({ response: response.data.data });\n  //       })\n  //       .catch((err) => {\n  //         reject(err);\n  //       });\n  //   });\n  // }\n\n\n  getUserTagById(id, fetchMem = false, page, limit) {\n    const endpoint = \"/admin/tags?id=\" + id + \"&fetchMembers=\" + fetchMem + \"&page=\" + page + \"&limit=\" + limit;\n    return new Promise((resolve, reject) => {\n      // HTTPClient.get(\"/admin/tags?id=\"+id+\"&fetchMembers=false\")\n      HTTPClient.get(endpoint).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addRemoveTag(obj) {\n    const endpoint = \"/admin/tags/assign\";\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(endpoint, obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\nexport default new UserTagsService();","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/services/userTags.services.js"],"names":["HTTPClient","UserTagsService","getUserTags","page","limit","endpoint","Promise","resolve","reject","get","then","response","data","catch","err","addUserTag","obj","post","updateUserTag","getUserTagById","id","fetchMem","addRemoveTag"],"mappings":"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","sourcesContent":["import HTTPClient from \"./http.services\";\n\n// class FoodCategoriesService {\nclass UserTagsService {\n  getUserTags(page = 1, limit = 10) {\n    const endpoint = \"/admin/tags/listing\";\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(endpoint)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  addUserTag(obj) {\n    const endpoint = \"/admin/tags/create\";\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(endpoint, obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  updateUserTag(obj) {\n    const endpoint = \"/admin/tags/update\";\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(endpoint, obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  // deleteUserTag(obj) {\n  //   return new Promise((resolve, reject) => {\n  //     HTTPClient.post(\"\", obj)\n  //       .then((response) => {\n  //         resolve({ response: response.data.data });\n  //       })\n  //       .catch((err) => {\n  //         reject(err);\n  //       });\n  //   });\n  // }\n\n  getUserTagById(id, fetchMem = false, page, limit) {\n    const endpoint =\n      \"/admin/tags?id=\" +\n      id +\n      \"&fetchMembers=\" +\n      fetchMem +\n      \"&page=\" +\n      page +\n      \"&limit=\" +\n      limit;\n    return new Promise((resolve, reject) => {\n      // HTTPClient.get(\"/admin/tags?id=\"+id+\"&fetchMembers=false\")\n      HTTPClient.get(endpoint)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  addRemoveTag(obj) {\n    const endpoint = \"/admin/tags/assign\";\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(endpoint, obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default new UserTagsService();\n"]},"metadata":{},"sourceType":"module"}