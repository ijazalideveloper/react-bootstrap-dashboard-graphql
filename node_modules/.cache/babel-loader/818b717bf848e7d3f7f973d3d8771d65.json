{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/MuxVideos/CreateEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport services from \"services\";\nimport FileUploadMux from \"components/FileUpload/UploadFileMux\";\nimport Loader from \"components/Loader\";\nimport makeAnimated from \"react-select/animated\";\n\nconst MuxVideoCreateOrUpdate = props => {\n  _s();\n\n  const toast = useToast();\n  const [disable, setDisable] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [muxAssetId, setMuxAssetId] = useState();\n  const [muxUploadId, setMuxUploadId] = useState();\n  const [muxVideoLink, setMuxVideoLink] = useState();\n  const [initialValues, setInitialValues] = useState({\n    name: \"\"\n  });\n  const [videoName, setVideoName] = useState(\"\");\n  let [isTitleSet, setIsTitleSet] = useState(false); // const createVideoUploadURL = asy\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    let video = {\n      name: values.name\n    };\n\n    if (isEditing) {\n      classObj.id = values.id;\n    }\n\n    services.MuxService.addVideo(video).then(response => {\n      toast.add(\"tr\", \"primary\", \"Class Created\");\n      seetDisable(false);\n    }).catch(error => {\n      console.log(error);\n      goBack();\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    });\n    setDisable(true);\n  };\n\n  const goBack = () => props.history.push(\"/admin/muxvideos\");\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  const handleValidations = values => {\n    const errors = {};\n\n    if (!values.deletedAt) {\n      if (!values.name) {\n        errors.name = \"* This field is required\";\n      }\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validate: handleValidations,\n      onSubmit: handleSubmit,\n      children: ({\n        isSubmitting,\n        values,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: videoName,\n                  onChange: e => {\n                    console.log('e.target.value', e.target.value);\n                    setVideoName(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success mr-2  btn-fill\",\n                onClick: e => {\n                  console.log('save title,', videoName);\n                  setIsTitleSet(true);\n                } // disabled={disable}\n                ,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), isTitleSet ? (() => {\n              let vidname = videoName;\n              console.log(\"vidname\", vidname);\n              return /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(FileUploadMux, {\n                    type: \"video\",\n                    name: \"linkMux\",\n                    videoName: vidname,\n                    setFieldValue: setFieldValue,\n                    classId: values.id,\n                    assetId: muxAssetId,\n                    uploadId: muxUploadId,\n                    assetIdSetter: setMuxAssetId,\n                    uploadIdSetter: setMuxUploadId,\n                    linkSetter: setMuxVideoLink\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 24\n              }, this);\n            })() : undefined]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MuxVideoCreateOrUpdate, \"AXUnger6yOH9IyIHqU82AADE754=\", false, function () {\n  return [useToast];\n});\n\n_c = MuxVideoCreateOrUpdate;\nexport default MuxVideoCreateOrUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MuxVideoCreateOrUpdate\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/MuxVideos/CreateEdit.js"],"names":["React","useState","useEffect","moment","Card","Row","Formik","Form","Field","ErrorMessage","useToast","services","FileUploadMux","Loader","makeAnimated","MuxVideoCreateOrUpdate","props","toast","disable","setDisable","isLoading","setIsLoading","isEditing","setIsEditing","muxAssetId","setMuxAssetId","muxUploadId","setMuxUploadId","muxVideoLink","setMuxVideoLink","initialValues","setInitialValues","name","videoName","setVideoName","isTitleSet","setIsTitleSet","handleSubmit","values","setSubmitting","video","classObj","id","MuxService","addVideo","then","response","add","seetDisable","catch","error","console","log","goBack","history","push","handleValidations","errors","deletedAt","isSubmitting","setFieldValue","e","target","value","vidname","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport services from \"services\";\nimport FileUploadMux from \"components/FileUpload/UploadFileMux\"\nimport Loader from \"components/Loader\";\nimport makeAnimated from \"react-select/animated\";\n\nconst MuxVideoCreateOrUpdate = (props) => {\n\n  const toast = useToast();\n  const [disable, setDisable] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const [muxAssetId,setMuxAssetId] = useState();\n  const [muxUploadId,setMuxUploadId] = useState();\n  const [muxVideoLink, setMuxVideoLink] = useState()\n\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n  });\n\n  const [videoName, setVideoName] = useState(\"\")\n  let [isTitleSet, setIsTitleSet] = useState(false)\n  // const createVideoUploadURL = asy\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    let video = {\n      name: values.name,\n    };\n    if (isEditing) {\n      classObj.id = values.id;\n    }\n       services.MuxService.addVideo(video)\n          .then((response) => {\n            toast.add(\"tr\", \"primary\", \"Class Created\");\n            seetDisable(false);\n          })\n          .catch((error) => {\n            console.log(error);\n            goBack();\n            toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n          });\n    setDisable(true);\n  };\n\n  const goBack = () => props.history.push(\"/admin/muxvideos\");\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n    const handleValidations = (values) => {\n    const errors = {};\n    if (!values.deletedAt) {\n      if (!values.name) {\n        errors.name = \"* This field is required\";\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validate={handleValidations}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, values, setFieldValue }) => (\n          <Form>\n            {/* <Row>\n              <div className=\"col\">\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <h2>New Video (Mux)</h2>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-auto\">\n                <button\n                  className=\"btn btn-success mr-2  btn-fill\"\n                  type=\"submit\"\n                  disabled={disable}\n                >\n                  Save\n                </button>\n              </div>\n            </Row> */}\n\n            <Card>\n              <Card.Body>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Title</label>\n                    <input \n                      value = {videoName}\n                      onChange = {(e) => {\n                        console.log('e.target.value',e.target.value)\n                        setVideoName(e.target.value)\n                      }}\n\n                    >\n                    </input>\n                  </div>\n                  <button\n                    className=\"btn btn-success mr-2  btn-fill\"\n                    onClick={e => {\n                      console.log('save title,', videoName)\n                      setIsTitleSet(true)\n                    }}\n                    // disabled={disable}\n                  >\n                  Save\n                  </button>\n\n                </Row>\n                { isTitleSet ? \n                (() => {\n                let vidname = videoName;\n                console.log(\"vidname\",vidname)\n                return <Row>\n                    <>\n                      <FileUploadMux\n                        type=\"video\"\n                        name=\"linkMux\"\n                        videoName={vidname}\n                        setFieldValue={setFieldValue}\n                        classId = {values.id}\n                        assetId={muxAssetId}\n                        uploadId={muxUploadId}\n                        assetIdSetter={setMuxAssetId}\n                        uploadIdSetter={setMuxUploadId}\n                        linkSetter={setMuxVideoLink}\n                      />\n                    </>\n                  \n                </Row> })(): undefined\n                }\n              </Card.Body>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default MuxVideoCreateOrUpdate;"]},"metadata":{},"sourceType":"module"}