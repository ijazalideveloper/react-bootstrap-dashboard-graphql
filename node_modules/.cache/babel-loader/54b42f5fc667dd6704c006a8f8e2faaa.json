{"ast":null,"code":"import HTTPClient from \"./http.services\";\n\nclass RecipeService {\n  getAllRecipes() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/recipes\").then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addRecipe(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/add/recipe\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  updateRecipe(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/update/recipe\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getRecipeById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/recipe?id=\" + id).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getAllCategories() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/recipe/categories\").then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getCatById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/recipe/category?id=\" + id).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  updateCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/update/recipe/category\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/add/recipe/category\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\nexport default new RecipeService();","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/services/recipes.service.js"],"names":["HTTPClient","RecipeService","getAllRecipes","Promise","resolve","reject","get","then","response","data","catch","err","addRecipe","obj","post","updateRecipe","getRecipeById","id","getAllCategories","getCatById","updateCategory","addCategory"],"mappings":"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","sourcesContent":["import HTTPClient from \"./http.services\";\n\nclass RecipeService {\n  getAllRecipes() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/recipes\")\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  addRecipe(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/add/recipe\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  updateRecipe(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/update/recipe\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getRecipeById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/recipe?id=\" + id)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getAllCategories() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/recipe/categories\")\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getCatById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/recipe/category?id=\" + id)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  updateCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/update/recipe/category\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  addCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/add/recipe/category\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default new RecipeService();\n"]},"metadata":{},"sourceType":"module"}