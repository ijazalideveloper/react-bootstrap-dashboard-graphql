{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Foods/createOrEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport services from \"services\";\nimport Loader from \"components/Loader\";\nimport makeAnimated from \"react-select/animated\";\nimport Select from \"react-select\";\nimport FoodCats from \"./FoodCats\";\n\nconst AddOrEditFood = props => {\n  _s();\n\n  const toast = useToast();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(null);\n  const [initialValues, setInitialValues] = useState({});\n  const [categoriesArr, setCategoriesArr] = useState([]);\n  const animatedComponents = makeAnimated();\n\n  const handleValidations = values => {\n    const errors = {};\n\n    if (!values.deletedAt) {\n      if (!values.name) {\n        errors.name = \"* This field is required\";\n      }\n\n      if (!values.portionSize) {\n        errors.name = \"* This field is required\";\n      }\n\n      if (!values.description) {\n        errors.description = \"* This field is required\";\n      }\n    }\n\n    return errors;\n  };\n\n  const validateFields = values => {\n    return values && values.name && values.portionSize && (!isEditing && values.categoryId || isEditing && (values.foodCategories.length > 0 || values.categoryId)); // (values.foodCategories.length < 1 && !values.categoryId)\n  };\n\n  const handleSubmit = values => {\n    let foodObj = {\n      id: values.id,\n      name: values.name,\n      portionSize: values.portionSize,\n      weight: values.weight,\n      categoryId: values.categoryId\n    };\n    validateFields(values) ? isEditing ? services.FoodService.updateFood(foodObj).then(response => {\n      if (values.deletedAt) {\n        toast.add(\"tr\", \"primary\", \"Food Deleted\");\n      } else {\n        toast.add(\"tr\", \"primary\", \"Food Updated\");\n      }\n\n      goBack();\n    }).catch(error => {\n      goBack();\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    }) : services.FoodService.addFood(foodObj).then(response => {\n      toast.add(\"tr\", \"primary\", \"Food Created\");\n      goBack();\n    }).catch(error => {\n      goBack();\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    }) : toast.add(\"tr\", \"danger\", \"Required Fields Are Missing\");\n  };\n\n  const handleDelete = values => {\n    services.FoodService.delFood({\n      id: values.id\n    }).then(response => {\n      toast.add(\"tr\", \"primary\", \"Food Deleted\");\n      goBack();\n    }).catch(error => {\n      goBack();\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    });\n  };\n\n  const getFoodCats = async () => {\n    try {\n      var _data$response, _data$response$data;\n\n      let data = await services.FoodCategoriesService.getFoodCategories();\n      let categoryArr = [];\n      data === null || data === void 0 ? void 0 : (_data$response = data.response) === null || _data$response === void 0 ? void 0 : (_data$response$data = _data$response.data) === null || _data$response$data === void 0 ? void 0 : _data$response$data.forEach(element => {\n        categoryArr = [...categoryArr, {\n          value: element.id,\n          label: element.title\n        }];\n      });\n      setCategoriesArr(categoryArr);\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      toast.add(\"tr\", \"danger\", err.message || (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.code) || \"Something went wrong\");\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getFoodCats();\n  }, []);\n\n  const getData = async () => {\n    try {\n      var _props$match, _props$match$params;\n\n      let id = props === null || props === void 0 ? void 0 : (_props$match = props.match) === null || _props$match === void 0 ? void 0 : (_props$match$params = _props$match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id;\n\n      if (id) {\n        let data = await services.FoodService.getFoodById(id);\n        data = data.response;\n\n        if (!data) {\n          throw Error(\"Food not Found\");\n        }\n\n        setInitialValues(data);\n      }\n\n      setIsEditing(id);\n    } catch (err) {\n      goBack();\n    }\n\n    setIsLoading(false);\n  };\n\n  const goBack = () => props.history.push(\"/admin/foods\");\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validate: handleValidations,\n      onSubmit: handleSubmit,\n      children: ({\n        isSubmitting,\n        values,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [isEditing ? \"Edit\" : \"Create\", \" Food\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light mr-2  \",\n              type: \"button\",\n              onClick: () => goBack(),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary mr-2  btn-fill \",\n              type: \"submit\",\n              onClick: () => {\n                confirm(\"Are You Sure to delete this ??\") && handleDelete(values);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success mr-2  btn-fill\",\n              type: \"submit\",\n              onClick: () => {\n                handleSubmit(values);\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"* Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"name\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"name\",\n                  component: \"small\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"* Portion Size\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"portionSize\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \" Weight in grams\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"weight\",\n                  className: \"form-control\",\n                  type: \"number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"* Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"categoryId\",\n                  closeMenuOnSelect: false,\n                  components: animatedComponents,\n                  placeholder: isEditing ? initialValues.foodCategories[0] ? initialValues.foodCategories[initialValues.foodCategories.length - 1].title : \"category\" : \"category\",\n                  onChange: selectedOption => {\n                    values.categoryId = selectedOption.value;\n                  },\n                  options: categoriesArr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Food Categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FoodCats, {\n                  foodId: values.id,\n                  cats: values.foodCategories,\n                  setFieldValue: setFieldValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddOrEditFood, \"qW8KStU3+W2lL0x7s5Q7Rb+1cVg=\", false, function () {\n  return [useToast];\n});\n\n_c = AddOrEditFood;\nexport default AddOrEditFood;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrEditFood\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Foods/createOrEdit.js"],"names":["React","useState","useEffect","Card","Row","Formik","Form","Field","ErrorMessage","useToast","services","Loader","makeAnimated","Select","FoodCats","AddOrEditFood","props","toast","isLoading","setIsLoading","isEditing","setIsEditing","initialValues","setInitialValues","categoriesArr","setCategoriesArr","animatedComponents","handleValidations","values","errors","deletedAt","name","portionSize","description","validateFields","categoryId","foodCategories","length","handleSubmit","foodObj","id","weight","FoodService","updateFood","then","response","add","goBack","catch","error","addFood","handleDelete","delFood","getFoodCats","data","FoodCategoriesService","getFoodCategories","categoryArr","forEach","element","value","label","title","err","message","code","getData","match","params","getFoodById","Error","history","push","isSubmitting","setFieldValue","confirm","selectedOption"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAC7B,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMyB,kBAAkB,GAAGd,YAAY,EAAvC;;AACA,QAAMe,iBAAiB,GAAGC,MAAM,IAAI;AAClC,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAI,CAACD,MAAM,CAACE,SAAZ,EAAuB;AACrB,UAAI,CAACF,MAAM,CAACG,IAAZ,EAAkB;AAChBF,QAAAA,MAAM,CAACE,IAAP,GAAc,0BAAd;AACD;;AACD,UAAI,CAACH,MAAM,CAACI,WAAZ,EAAyB;AACvBH,QAAAA,MAAM,CAACE,IAAP,GAAc,0BAAd;AACD;;AACD,UAAI,CAACH,MAAM,CAACK,WAAZ,EAAyB;AACvBJ,QAAAA,MAAM,CAACI,WAAP,GAAqB,0BAArB;AACD;AACF;;AACD,WAAOJ,MAAP;AACD,GAdD;;AAgBA,QAAMK,cAAc,GAAIN,MAAD,IAAY;AACjC,WACEA,MAAM,IACNA,MAAM,CAACG,IADP,IAEAH,MAAM,CAACI,WAFP,KAGE,CAACZ,SAAD,IAAcQ,MAAM,CAACO,UAAtB,IACEf,SAAS,KAAKQ,MAAM,CAACQ,cAAP,CAAsBC,MAAtB,GAA+B,CAA/B,IAAoCT,MAAM,CAACO,UAAhD,CAJZ,CADF,CADiC,CAQjC;AACD,GATD;;AAWA,QAAMG,YAAY,GAAGV,MAAM,IAAI;AAC7B,QAAIW,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEZ,MAAM,CAACY,EADC;AAEZT,MAAAA,IAAI,EAAEH,MAAM,CAACG,IAFD;AAGZC,MAAAA,WAAW,EAAEJ,MAAM,CAACI,WAHR;AAIZS,MAAAA,MAAM,EAAEb,MAAM,CAACa,MAJH;AAKZN,MAAAA,UAAU,EAAEP,MAAM,CAACO;AALP,KAAd;AAOAD,IAAAA,cAAc,CAACN,MAAD,CAAd,GACIR,SAAS,GACPV,QAAQ,CAACgC,WAAT,CAAqBC,UAArB,CAAgCJ,OAAhC,EAAyCK,IAAzC,CAA8CC,QAAQ,IAAI;AACxD,UAAIjB,MAAM,CAACE,SAAX,EAAsB;AACpBb,QAAAA,KAAK,CAAC6B,GAAN,CAAU,IAAV,EAAgB,SAAhB,EAA2B,cAA3B;AACD,OAFD,MAEO;AACL7B,QAAAA,KAAK,CAAC6B,GAAN,CAAU,IAAV,EAAgB,SAAhB,EAA2B,cAA3B;AACD;;AACDC,MAAAA,MAAM;AACP,KAPD,EAOGC,KAPH,CAOSC,KAAK,IAAI;AAChBF,MAAAA,MAAM;AACN9B,MAAAA,KAAK,CAAC6B,GAAN,CAAU,IAAV,EAAgB,QAAhB,EAA0B,wBAA1B;AACD,KAVD,CADO,GAYPpC,QAAQ,CAACgC,WAAT,CAAqBQ,OAArB,CAA6BX,OAA7B,EACGK,IADH,CACQC,QAAQ,IAAI;AAChB5B,MAAAA,KAAK,CAAC6B,GAAN,CAAU,IAAV,EAAgB,SAAhB,EAA2B,cAA3B;AACAC,MAAAA,MAAM;AACP,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdF,MAAAA,MAAM;AACN9B,MAAAA,KAAK,CAAC6B,GAAN,CAAU,IAAV,EAAgB,QAAhB,EAA0B,wBAA1B;AACD,KARH,CAbN,GAsBI7B,KAAK,CAAC6B,GAAN,CAAU,IAAV,EAAgB,QAAhB,EAA0B,6BAA1B,CAtBJ;AAuBD,GA/BD;;AAiCA,QAAMK,YAAY,GAAGvB,MAAM,IAAI;AAC7BlB,IAAAA,QAAQ,CAACgC,WAAT,CAAqBU,OAArB,CAA6B;AAAEZ,MAAAA,EAAE,EAAEZ,MAAM,CAACY;AAAb,KAA7B,EACGI,IADH,CACQC,QAAQ,IAAI;AAChB5B,MAAAA,KAAK,CAAC6B,GAAN,CAAU,IAAV,EAAgB,SAAhB,EAA2B,cAA3B;AACAC,MAAAA,MAAM;AACP,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdF,MAAAA,MAAM;AACN9B,MAAAA,KAAK,CAAC6B,GAAN,CAAU,IAAV,EAAgB,QAAhB,EAA0B,wBAA1B;AACD,KARH;AASD,GAVD;;AAaA,QAAMO,WAAW,GAAG,YAAY;AAC9B,QAAI;AAAA;;AACF,UAAIC,IAAI,GAAG,MAAM5C,QAAQ,CAAC6C,qBAAT,CAA+BC,iBAA/B,EAAjB;AACA,UAAIC,WAAW,GAAG,EAAlB;AACAH,MAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,8BAAAA,IAAI,CAAET,QAAN,yFAAgBS,IAAhB,4EAAsBI,OAAtB,CAA+BC,OAAD,IAAa;AACzCF,QAAAA,WAAW,GAAG,CACZ,GAAGA,WADS,EAEZ;AAAEG,UAAAA,KAAK,EAAED,OAAO,CAACnB,EAAjB;AAAqBqB,UAAAA,KAAK,EAAEF,OAAO,CAACG;AAApC,SAFY,CAAd;AAID,OALD;AAMArC,MAAAA,gBAAgB,CAACgC,WAAD,CAAhB;AACD,KAVD,CAUE,OAAOM,GAAP,EAAY;AAAA;;AACZ9C,MAAAA,KAAK,CAAC6B,GAAN,CACE,IADF,EAEE,QAFF,EAGEiB,GAAG,CAACC,OAAJ,KAAeD,GAAf,aAAeA,GAAf,wCAAeA,GAAG,CAAElB,QAApB,wEAAe,cAAeS,IAA9B,uDAAe,mBAAqBW,IAApC,KAA4C,sBAH9C;AAKD;AACF,GAlBD;;AAoBA/D,EAAAA,SAAS,CAAC,MAAM;AACdgE,IAAAA,OAAO;AACPb,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMa,OAAO,GAAG,YAAY;AAC1B,QAAI;AAAA;;AACF,UAAI1B,EAAE,GAAGxB,KAAH,aAAGA,KAAH,uCAAGA,KAAK,CAAEmD,KAAV,wEAAG,aAAcC,MAAjB,wDAAG,oBAAsB5B,EAA/B;;AACA,UAAIA,EAAJ,EAAQ;AACN,YAAIc,IAAI,GAAG,MAAM5C,QAAQ,CAACgC,WAAT,CAAqB2B,WAArB,CAAiC7B,EAAjC,CAAjB;AACAc,QAAAA,IAAI,GAAGA,IAAI,CAACT,QAAZ;;AACA,YAAI,CAACS,IAAL,EAAW;AACT,gBAAMgB,KAAK,CAAC,gBAAD,CAAX;AACD;;AACD/C,QAAAA,gBAAgB,CAAC+B,IAAD,CAAhB;AACD;;AACDjC,MAAAA,YAAY,CAACmB,EAAD,CAAZ;AACD,KAXD,CAWE,OAAOuB,GAAP,EAAY;AACZhB,MAAAA,MAAM;AACP;;AACD5B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAhBD;;AAiBA,QAAM4B,MAAM,GAAG,MAAM/B,KAAK,CAACuD,OAAN,CAAcC,IAAd,CAAmB,cAAnB,CAArB;;AACA,MAAItD,SAAJ,EAAe;AACb,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAEI,aADjB;AAEE,MAAA,QAAQ,EAAEK,iBAFZ;AAGE,MAAA,QAAQ,EAAEW,YAHZ;AAAA,gBAKG,CAAC;AAAEmC,QAAAA,YAAF;AAAgB7C,QAAAA,MAAhB;AAAwB8C,QAAAA;AAAxB,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,GAAD;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,uCACE;AAAA,6BAAKtD,SAAS,GAAG,MAAH,GAAY,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,sBADZ;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAE,MAAM2B,MAAM,EAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAQG3B,SAAS,iBACR;AACE,cAAA,SAAS,EAAC,mCADZ;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAE,MAAM;AACbuD,gBAAAA,OAAO,CAAC,gCAAD,CAAP,IAA6CxB,YAAY,CAACvB,MAAD,CAAzD;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAmBE;AACE,cAAA,SAAS,EAAC,gCADZ;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAE,MAAM;AACbU,gBAAAA,YAAY,CAACV,MAAD,CAAZ;AACD,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAwCE,QAAC,IAAD;AAAA,iCACE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE,QAAC,GAAD;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,SAAS,EAAC,cAA7B;AAA4C,kBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,YAAD;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,SAAS,EAAC,OAFZ;AAGE,kBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,aADP;AAEE,kBAAA,SAAS,EAAC,cAFZ;AAGE,kBAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAoBE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,SAAS,EAAC,cAFZ;AAGE,kBAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBF,eA6BE;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,MAAD;AACE,kBAAA,IAAI,EAAC,YADP;AAEE,kBAAA,iBAAiB,EAAE,KAFrB;AAGE,kBAAA,UAAU,EAAEF,kBAHd;AAIE,kBAAA,WAAW,EACTN,SAAS,GACLE,aAAa,CAACc,cAAd,CAA6B,CAA7B,IACEd,aAAa,CAACc,cAAd,CACEd,aAAa,CAACc,cAAd,CAA6BC,MAA7B,GAAsC,CADxC,EAEEyB,KAHJ,GAIE,UALG,GAML,UAXR;AAaE,kBAAA,QAAQ,EAAEc,cAAc,IAAI;AAC1BhD,oBAAAA,MAAM,CAACO,UAAP,GAAoByC,cAAc,CAAChB,KAAnC;AACD,mBAfH;AAgBE,kBAAA,OAAO,EAAEpC;AAhBX;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7BF,eAkDE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACE;AAAO,kBAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,QAAD;AACE,kBAAA,MAAM,EAAEI,MAAM,CAACY,EADjB;AAEE,kBAAA,IAAI,EAAEZ,MAAM,CAACQ,cAFf;AAGE,kBAAA,aAAa,EAAEsC;AAHjB;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoHD,CAnPD;;GAAM3D,a;UACUN,Q;;;KADVM,a;AAqPN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport services from \"services\";\nimport Loader from \"components/Loader\";\nimport makeAnimated from \"react-select/animated\";\nimport Select from \"react-select\";\nimport FoodCats from \"./FoodCats\";\nconst AddOrEditFood = props => {\n  const toast = useToast();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(null);\n  const [initialValues, setInitialValues] = useState({});\n  const [categoriesArr, setCategoriesArr] = useState([]);\n  const animatedComponents = makeAnimated();\n  const handleValidations = values => {\n    const errors = {};\n    if (!values.deletedAt) {\n      if (!values.name) {\n        errors.name = \"* This field is required\";\n      }\n      if (!values.portionSize) {\n        errors.name = \"* This field is required\";\n      }\n      if (!values.description) {\n        errors.description = \"* This field is required\";\n      }\n    }\n    return errors;\n  };\n\n  const validateFields = (values) => {\n    return (\n      values &&\n      values.name &&\n      values.portionSize &&\n      ((!isEditing && values.categoryId) ||\n        (isEditing && (values.foodCategories.length > 0 || values.categoryId)))\n    );\n    // (values.foodCategories.length < 1 && !values.categoryId)\n  };\n\n  const handleSubmit = values => {\n    let foodObj = {\n      id: values.id,\n      name: values.name,\n      portionSize: values.portionSize,\n      weight: values.weight,\n      categoryId: values.categoryId,\n    };\n    validateFields(values)\n      ? isEditing\n        ? services.FoodService.updateFood(foodObj).then(response => {\n            if (values.deletedAt) {\n              toast.add(\"tr\", \"primary\", \"Food Deleted\");\n            } else {\n              toast.add(\"tr\", \"primary\", \"Food Updated\");\n            }\n            goBack();\n          }).catch(error => {\n            goBack();\n            toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n          })\n        : services.FoodService.addFood(foodObj)\n            .then(response => {\n              toast.add(\"tr\", \"primary\", \"Food Created\");\n              goBack();\n            })\n            .catch(error => {\n              goBack();\n              toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n            })\n      : toast.add(\"tr\", \"danger\", \"Required Fields Are Missing\");\n  };\n\n  const handleDelete = values => {\n    services.FoodService.delFood({ id: values.id })\n      .then(response => {\n        toast.add(\"tr\", \"primary\", \"Food Deleted\");\n        goBack();\n      })\n      .catch(error => {\n        goBack();\n        toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n      });\n  };\n\n\n  const getFoodCats = async () => {\n    try {\n      let data = await services.FoodCategoriesService.getFoodCategories();\n      let categoryArr = [];\n      data?.response?.data?.forEach((element) => {\n        categoryArr = [\n          ...categoryArr,\n          { value: element.id, label: element.title },\n        ];\n      });\n      setCategoriesArr(categoryArr);\n    } catch (err) {\n      toast.add(\n        \"tr\",\n        \"danger\",\n        err.message || err?.response?.data?.code || \"Something went wrong\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    getFoodCats();\n  }, []);\n\n  const getData = async () => {\n    try {\n      let id = props?.match?.params?.id;\n      if (id) {\n        let data = await services.FoodService.getFoodById(id);\n        data = data.response;\n        if (!data) {\n          throw Error(\"Food not Found\");\n        }\n        setInitialValues(data);\n      }\n      setIsEditing(id);\n    } catch (err) {\n      goBack();\n    }\n    setIsLoading(false);\n  };\n  const goBack = () => props.history.push(\"/admin/foods\");\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validate={handleValidations}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, values, setFieldValue }) => (\n          <Form>\n            <Row>\n              <div className=\"col\">\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <h2>{isEditing ? \"Edit\" : \"Create\"} Food</h2>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-auto\">\n                <button\n                  className=\"btn btn-light mr-2  \"\n                  type=\"button\"\n                  onClick={() => goBack()}\n                >\n                  Back\n                </button>\n                {isEditing && (\n                  <button\n                    className=\"btn btn-secondary mr-2  btn-fill \"\n                    type=\"submit\"\n                    onClick={() => {\n                      confirm(\"Are You Sure to delete this ??\") && handleDelete(values)\n                    }}\n                  >\n                    Delete\n                  </button>\n                )}\n                <button\n                  className=\"btn btn-success mr-2  btn-fill\"\n                  type=\"submit\"\n                  onClick={() => {\n                    handleSubmit(values);\n                  }}\n                >\n                  Save\n                </button>\n              </div>\n            </Row>\n\n            <Card>\n              <Card.Body>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">* Name</label>\n                    <Field name=\"name\" className=\"form-control\" type=\"text\" />\n                    <ErrorMessage\n                      name=\"name\"\n                      component=\"small\"\n                      className=\"text-danger\"\n                    />\n                  </div>\n\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">* Portion Size</label>\n                    <Field\n                      name=\"portionSize\"\n                      className=\"form-control\"\n                      type=\"text\"\n                    />\n                  </div>\n\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\"> Weight in grams</label>\n                    <Field\n                      name=\"weight\"\n                      className=\"form-control\"\n                      type=\"number\"\n                    />\n                  </div>\n\n                  <div className=\"col form-group\">\n                    <label htmlFor=\"\">* Category</label>\n                    <Select\n                      name=\"categoryId\"\n                      closeMenuOnSelect={false}\n                      components={animatedComponents}\n                      placeholder={\n                        isEditing\n                          ? initialValues.foodCategories[0]\n                            ? initialValues.foodCategories[\n                                initialValues.foodCategories.length - 1\n                              ].title\n                            : \"category\"\n                          : \"category\"\n                      }\n                      onChange={selectedOption => {\n                        values.categoryId = selectedOption.value;\n                      }}\n                      options={categoriesArr}\n                    />\n                  </div>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Food Categories</label>\n                    <FoodCats\n                      foodId={values.id}\n                      cats={values.foodCategories}\n                      setFieldValue={setFieldValue}\n                    />\n                  </div>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default AddOrEditFood;\n"]},"metadata":{},"sourceType":"module"}