{"ast":null,"code":"import axios from \"axios\";\nimport CONSTANTS from \"../constants\";\n\nconst requestInterceptor = async request => {\n  let userInfo = await window.localStorage.getItem(\"aimfit-user\");\n\n  if (userInfo) {\n    var _userInfo;\n\n    userInfo = JSON.parse(userInfo);\n    request.headers.Authorization = (_userInfo = userInfo) === null || _userInfo === void 0 ? void 0 : _userInfo.token;\n  }\n\n  if (CONSTANTS.GLOBAL.PAYMENTS_BACKEND) {\n    let paymentServiceRoute = CONSTANTS.GLOBAL.PAYMENT_ROUTES.filter(url => request.url.includes(url));\n    if (CONSTANTS.GLOBAL.PAYMENTS_URL && paymentServiceRoute && paymentServiceRoute.length > 0) request.url = CONSTANTS.GLOBAL.PAYMENTS_URL + request.url;else request.url = CONSTANTS.GLOBAL.BASE_URL + request.url;\n  } else {\n    request.url = CONSTANTS.GLOBAL.BASE_URL + request.url;\n  }\n\n  return request;\n};\n\nconst successInterceptor = response => {// console.log(`Success: ${response}`);\n};\n\nconst errorInterceptor = error => {\n  console.log(`Error: ${error}`);\n};\n\nlet axiosInstance = axios.create();\n\nclass HTTPClient {\n  constructor() {\n    axiosInstance.interceptors.request.use(requestInterceptor);\n    axiosInstance.interceptors.response.use(response => {\n      successInterceptor(response);\n      return response;\n    }, error => {\n      errorInterceptor(error);\n\n      if (error.response.status === CONSTANTS.GLOBAL.UNAUTHORIZED) {\n        console.log(\"unauthorized \");\n        window.localStorage.clear();\n      }\n\n      return Promise.reject({ ...error\n      });\n    });\n  }\n\n  get(url) {\n    return axiosInstance.get(url).then(response => Promise.resolve(response)).catch(error => Promise.reject(error));\n  }\n\n  post(url, data) {\n    return axiosInstance.post(url, data).then(response => Promise.resolve(response)).catch(error => Promise.reject(error));\n  }\n\n  put(url, data = {}) {\n    return axiosInstance.put(url, data).then(response => Promise.resolve(response)).catch(error => Promise.reject(error));\n  }\n\n  delete(url) {\n    return axiosInstance.delete(url).then(response => Promise.resolve(response)).catch(error => Promise.reject(error));\n  }\n\n}\n\nexport default new HTTPClient();","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/services/http.services.js"],"names":["axios","CONSTANTS","requestInterceptor","request","userInfo","window","localStorage","getItem","JSON","parse","headers","Authorization","token","GLOBAL","PAYMENTS_BACKEND","paymentServiceRoute","PAYMENT_ROUTES","filter","url","includes","PAYMENTS_URL","length","BASE_URL","successInterceptor","response","errorInterceptor","error","console","log","axiosInstance","create","HTTPClient","constructor","interceptors","use","status","UNAUTHORIZED","clear","Promise","reject","get","then","resolve","catch","post","data","put","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport CONSTANTS from \"../constants\";\nconst requestInterceptor = async (request) => {\n\n\n  let userInfo = await window.localStorage.getItem(\"aimfit-user\");\n  if (userInfo) {\n    userInfo = JSON.parse(userInfo);\n    request.headers.Authorization = userInfo?.token;\n  }\n\n\n  if( CONSTANTS.GLOBAL.PAYMENTS_BACKEND ){\n    let paymentServiceRoute  = CONSTANTS.GLOBAL.PAYMENT_ROUTES.filter(url => request.url.includes(url));\n    if( CONSTANTS.GLOBAL.PAYMENTS_URL && paymentServiceRoute && paymentServiceRoute.length > 0)\n      request.url = CONSTANTS.GLOBAL.PAYMENTS_URL + request.url; \n    else     \n      request.url = CONSTANTS.GLOBAL.BASE_URL + request.url;\n  }else{\n    request.url = CONSTANTS.GLOBAL.BASE_URL + request.url;\n  }\n\n  return request;\n};\n\nconst successInterceptor = (response) => {\n  // console.log(`Success: ${response}`);\n};\n\nconst errorInterceptor = (error) => {\n  console.log(`Error: ${error}`);\n};\n\nlet axiosInstance = axios.create();\n\nclass HTTPClient {\n  constructor() {\n    axiosInstance.interceptors.request.use(requestInterceptor);\n    axiosInstance.interceptors.response.use(\n      (response) => {\n        successInterceptor(response);\n        return response;\n      },\n      (error) => {\n        errorInterceptor(error);\n        if (error.response.status === CONSTANTS.GLOBAL.UNAUTHORIZED) {\n          console.log(\"unauthorized \");\n          window.localStorage.clear();\n          \n          \n        }\n        return Promise.reject({ ...error });\n      }\n    );\n  }\n\n  get(url) {\n    return axiosInstance\n      .get(url)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n\n  post(url, data) {\n    return axiosInstance\n      .post(url, data)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n\n  put(url, data = {}) {\n    return axiosInstance\n      .put(url, data)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n\n  delete(url) {\n    return axiosInstance\n      .delete(url)\n      .then((response) => Promise.resolve(response))\n      .catch((error) => Promise.reject(error));\n  }\n}\n\nexport default new HTTPClient();\n"]},"metadata":{},"sourceType":"module"}