{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Members/MemberAttendance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport services from \"services\";\nimport DateTimePicker from 'react-datetime-picker';\nimport { useToast } from \"components/Toast\";\n\nfunction MemberAttendance(props) {\n  _s();\n\n  const toast = useToast();\n  let searchControl = useRef();\n  let {\n    memberId\n  } = useParams();\n  let [isSaving, setIsSaving] = useState(false);\n  let [isSearching, setIsSearching] = useState(false);\n  let [classType, setClassType] = useState(\"live\");\n  let [classSlots, setClassSlots] = useState([]);\n  let [selectedClass, setSelectedClass] = useState(null);\n  const [vodDateTime, setvodDateTime] = useState(new Date()); // let onSearchKeyPress = (e) => {\n  //     console.log(searchControl.current)\n  // }\n  // useEffect(() => {        \n  // },[])\n\n  let typeSelect = e => {\n    console.log('radio button clicked');\n    let type = document.querySelector('input[name=\"type\"]:checked').value;\n    setClassType(type);\n    console.log('radio button value', type);\n  };\n\n  let cardStyle = {\n    border: '1px solid gray',\n    borderRadius: '10px',\n    padding: '50px',\n    marginTop: '10px',\n    boxShadow: '3px 3px 5px 3px #ccc'\n  };\n  let selectBtnStyle = {\n    marginLeft: '10px'\n  };\n\n  let classCardLive = (classObject, key) => {\n    console.log('live class object');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: cardStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [classObject.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 39\n        }, this), new Date(classObject.start_date).toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), \"Duration: \", classObject.duration, \" minutes\", /*#__PURE__*/_jsxDEV(Button, {\n        style: selectBtnStyle,\n        onClick: e => {\n          setSelectedClass(classObject);\n        },\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  };\n\n  let classCardVOD = (classObject, key) => {\n    console.log('vod class object');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: cardStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: classObject.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), \"Duration: \", classObject.duration, \" minutes\", /*#__PURE__*/_jsxDEV(Button, {\n        style: selectBtnStyle,\n        onClick: e => {\n          setSelectedClass(classObject);\n        },\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  };\n\n  let populateClassList = () => {\n    let slots = []; // let slots = [<option key = {0} value = {0}>{\"Select once this has something\"}</option>];\n    // slots.push()\n\n    let componentFunction;\n    let key;\n\n    if (classSlots.length > 0 && classSlots[0].class_type_id == 1) {\n      componentFunction = classCardLive;\n      console.log('live class function', componentFunction);\n      key = 'id';\n    } else {\n      componentFunction = classCardVOD;\n      console.log('vod class function', componentFunction);\n      key = 'id';\n    }\n\n    for (let i = 0; i < classSlots.length; i++) {\n      slots.push(componentFunction(classSlots[i], i + 1));\n    } // console.log(slots)\n    // throw 123\n\n\n    return slots;\n  };\n\n  const searchCallback = async e => {\n    e.preventDefault();\n\n    if (!isSearching) {\n      try {\n        setIsSearching(true); // setClassSlots([])\n        // setSelectedClass(null)\n\n        let search = searchControl.current.value;\n        let response = await services.ClassService.filterClassAndClassSlots({\n          search,\n          psize: 20,\n          pnumber: 1,\n          slots: 10,\n          type: classType\n        });\n        console.log('response in component', response);\n        setIsSearching(false);\n        setClassSlots(response);\n      } catch (err) {\n        toast.add(\"tr\", \"danger\", \"exception occured\");\n      }\n    } // console.log('response in component',response);\n\n  };\n\n  const selectClass = key => {\n    console.log(key);\n  };\n\n  let classesList = () => {\n    if (isSearching) {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-circle-notch fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 22\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: populateClassList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  let selectedClassComponent = () => {\n    if (selectedClass == null) {\n      return \"no class selected for attendance, search and select\";\n    }\n\n    let details = selectedClass;\n    let items = [];\n\n    if (details.class_type_id == 1) {\n      items = [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: details.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Type: LIVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Class ID: \", details.class_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Slot start time: \", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: new Date(details.start_date).toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)];\n    } else {\n      items = [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: details.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Type: VOD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Class ID: \", details.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Set viewed at:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n          onChange: setvodDateTime,\n          value: vodDateTime,\n          maxDate: new Date()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this) // <div>{JSON.stringify(details)}</div>\n      ];\n    }\n\n    let text = isSaving ? /*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"fas fa-circle-notch fa-spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }, this) : 'Mark Attendance';\n    items.push( /*#__PURE__*/_jsxDEV(Button, {\n      onClick: saveAttendance,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: 'right',\n        position: 'fixed',\n        border: '1px solid gray',\n        padding: '20px'\n      },\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this);\n  };\n\n  let saveAttendance = async e => {\n    e.preventDefault();\n\n    if (!isSaving) {\n      setIsSaving(true); // setClassSlots([])\n      // setSelectedClass(null)\n\n      let viewedAt;\n      let classId;\n      let classSlotId; // let memberId;\n\n      if (selectedClass.class_type_id == 1) {\n        viewedAt = selectedClass.start_date;\n        classId = selectedClass.class_id;\n        classSlotId = selectedClass.class_slot_id;\n      } else {\n        viewedAt = vodDateTime;\n        classId = selectedClass.id;\n        classSlotId = null;\n      }\n\n      memberId = parseInt(memberId);\n      let response = await services.MemberService.markMemberAttendance({\n        memberId,\n        classId,\n        classSlotId,\n        viewedAt\n      });\n      console.log('response', response);\n      let toastMessage = typeof response.data.data === 'string' ? response.data.data : response.data.message;\n      toast.add(\"tr\", \"primary\", toastMessage);\n      setIsSaving(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"liveType\",\n              name: \"type\",\n              checked: classType == \"live\",\n              value: \"live\",\n              onChange: typeSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), \"LIVE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                'marginLeft': \"15px\"\n              },\n              type: \"radio\",\n              id: \"vodType\",\n              name: \"type\",\n              checked: classType == \"vod\",\n              value: \"vod\",\n              onChange: typeSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), \"VOD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            display: 'inline-block',\n            width: '60%'\n          },\n          ref: searchControl,\n          type: \"text\",\n          placeholder: \"search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            display: 'inline-block'\n          },\n          variant: \"success\",\n          onClick: searchCallback,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: classesList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedClassComponent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(MemberAttendance, \"L8VXPb6/ilFt7+7J1Wi7lIrLNZg=\", false, function () {\n  return [useToast, useParams];\n});\n\n_c = MemberAttendance;\nexport default MemberAttendance;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberAttendance\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Members/MemberAttendance.js"],"names":["React","useState","useEffect","useRef","useLocation","useParams","Form","Button","services","DateTimePicker","useToast","MemberAttendance","props","toast","searchControl","memberId","isSaving","setIsSaving","isSearching","setIsSearching","classType","setClassType","classSlots","setClassSlots","selectedClass","setSelectedClass","vodDateTime","setvodDateTime","Date","typeSelect","e","console","log","type","document","querySelector","value","cardStyle","border","borderRadius","padding","marginTop","boxShadow","selectBtnStyle","marginLeft","classCardLive","classObject","key","name","start_date","toString","duration","classCardVOD","populateClassList","slots","componentFunction","length","class_type_id","i","push","searchCallback","preventDefault","search","current","response","ClassService","filterClassAndClassSlots","psize","pnumber","err","add","selectClass","classesList","selectedClassComponent","details","items","class_id","id","text","saveAttendance","float","position","viewedAt","classId","classSlotId","class_slot_id","parseInt","MemberService","markMemberAttendance","toastMessage","data","message","display","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation, useParams } from \"react-router\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport services from \"services\";\nimport DateTimePicker from 'react-datetime-picker';\nimport { useToast } from \"components/Toast\";\n\nfunction MemberAttendance(props) {\n\n    const toast = useToast();\n    let searchControl = useRef()\n    let { memberId } = useParams()\n    let [ isSaving, setIsSaving ] = useState(false)\n    let [ isSearching, setIsSearching ] = useState(false)\n    let [ classType, setClassType ] = useState(\"live\")\n    let [ classSlots, setClassSlots] = useState([])\n    let [ selectedClass, setSelectedClass] = useState(null)\n    const [vodDateTime, setvodDateTime] = useState(new Date());\n\n    // let onSearchKeyPress = (e) => {\n    //     console.log(searchControl.current)\n    // }\n\n    // useEffect(() => {        \n    // },[])\n    let typeSelect = (e) => {\n        console.log('radio button clicked')\n        let type = (document.querySelector('input[name=\"type\"]:checked').value)\n        setClassType(type)\n        console.log('radio button value',type)\n    }\n\n\n    let cardStyle = {\n        border: '1px solid gray',\n        borderRadius: '10px',\n        padding: '50px',\n        marginTop: '10px',\n        boxShadow: '3px 3px 5px 3px #ccc',\n    };\n    let selectBtnStyle = {\n        marginLeft: '10px'\n    }\n\n    let classCardLive = (classObject, key) => {\n        console.log('live class object')\n        return (\n            <div key={key} style={cardStyle}>\n                <h4>{classObject.name}<br></br>{new Date(classObject.start_date).toString()}</h4>\n                {/* Start time: {}<br></br> */}\n                Duration: {classObject.duration} minutes\n                <Button style={selectBtnStyle} onClick={(e) => {\n                    setSelectedClass(classObject)\n                }}>Select</Button>\n            </div>\n        )\n    }\n\n    let classCardVOD = (classObject, key) => {\n        console.log('vod class object')\n        return (\n            <div style={cardStyle}>\n                <h3>{classObject.name}</h3>\n                {/* Start time: {classObject.start_date}<br></br> */}\n                Duration: {classObject.duration} minutes\n                <Button style={selectBtnStyle} onClick={(e) => {\n                    setSelectedClass(classObject)\n                }}>Select</Button>\n            </div>\n        )\n    }\n\n    let populateClassList = () => {\n        let slots = []\n        // let slots = [<option key = {0} value = {0}>{\"Select once this has something\"}</option>];\n        // slots.push()\n        let componentFunction;\n        let key;\n        if (classSlots.length > 0 && classSlots[0].class_type_id == 1) {\n            componentFunction = classCardLive;\n            console.log('live class function', componentFunction)\n            key = 'id'\n        } else {\n            componentFunction = classCardVOD;\n            console.log('vod class function', componentFunction) \n            key = 'id'\n        }\n        for (let i = 0 ; i < classSlots.length; i++) {\n            slots.push( componentFunction(classSlots[i], i+1)  )\n            \n        }\n        // console.log(slots)\n        // throw 123\n        return slots;\n    }\n\n    const searchCallback = async (e) => {\n        e.preventDefault()\n        if (!isSearching) {\n            try {\n                setIsSearching(true);\n                // setClassSlots([])\n                // setSelectedClass(null)\n                let search = searchControl.current.value;\n                let response = await services.ClassService\n                    .filterClassAndClassSlots(\n                        {\n                            search,\n                            psize: 20,\n                            pnumber: 1,\n                            slots: 10,\n                            type: classType\n                        }\n                    );\n                console.log('response in component',response)\n                setIsSearching(false)\n                setClassSlots(response)\n\n            } catch (err) {\n                toast.add(\"tr\", \"danger\", \"exception occured\");\n            }\n        }\n        // console.log('response in component',response);\n        \n    }\n\n    const selectClass = (key) => {\n        console.log(key)\n    }\n\n    let classesList = () => {\n        if (isSearching) {\n            return   <i class=\"fas fa-circle-notch fa-spin\"></i>\n        } else {\n            return (\n            <div>\n                { populateClassList() }\n            </div>\n            )\n        }\n\n    };\n\n    let selectedClassComponent = () => {\n        if (selectedClass == null) {\n            return \"no class selected for attendance, search and select\"\n        }\n\n        let details = selectedClass\n        let items=[];\n        if (details.class_type_id == 1) {\n            \n            items =[\n                <h3>{details.name}</h3>,\n                <h4>Type: LIVE</h4>,\n                <h4>Class ID: {details.class_id}</h4>,\n                <h4>Slot start time: <h5>{new Date(details.start_date).toString()}</h5></h4>\n            ]\n            \n        } else {\n            items =[\n                <h3>{details.name}</h3>,\n                <h4>Type: VOD</h4>,\n                <h4>Class ID: {details.id}</h4>,\n                <div> Set viewed at:<br></br>\n                <DateTimePicker\n                    onChange={setvodDateTime}\n                    value={vodDateTime}\n                    maxDate={new Date()}\n                />\n                </div>,\n                // <div>{JSON.stringify(details)}</div>\n            \n            ]\n        }\n        let text = isSaving ?   <i class=\"fas fa-circle-notch fa-spin\"></i> : 'Mark Attendance'\n        items.push(\n            <Button onClick={saveAttendance}>{text}</Button>\n        )\n        return (\n            <div style={{\n                float: 'right',\n                position: 'fixed',\n                border: '1px solid gray',\n                padding: '20px'\n            }}>\n                {items}\n            </div>\n        )\n\n    }\n\n    let saveAttendance = async(e) => {\n        e.preventDefault()\n        if (!isSaving) {\n            setIsSaving(true);\n            // setClassSlots([])\n            // setSelectedClass(null)\n            let viewedAt;\n            let classId;\n            let classSlotId;\n            // let memberId;\n\n            if (selectedClass.class_type_id == 1) {\n                viewedAt = selectedClass.start_date;\n                classId = selectedClass.class_id\n                classSlotId = selectedClass.class_slot_id\n            } else {\n                viewedAt = vodDateTime;\n                classId = selectedClass.id\n                classSlotId = null\n            }\n            memberId = parseInt(memberId);\n            let response = await services.MemberService\n                .markMemberAttendance(\n                    {\n                        memberId, \n                        classId, \n                        classSlotId, \n                        viewedAt\n                    }\n                );\n                console.log('response',response)\n            let toastMessage = typeof response.data.data === 'string' ? response.data.data : response.data.message\n            toast.add(\"tr\", \"primary\", toastMessage);\n            setIsSaving(false)\n        }\n    }\n\n    return (\n    <>  \n    <div className=\"row\">\n        <div className=\"col-md-12\">\n            <div >\n                <form>\n                <input type=\"radio\" id=\"liveType\"\n                name=\"type\" checked={classType == \"live\"} value=\"live\" onChange={typeSelect}></input>\n                LIVE\n                <input style={ { 'marginLeft': \"15px\" } } type=\"radio\" id=\"vodType\"\n                name=\"type\" checked={classType == \"vod\"} value=\"vod\" onChange={typeSelect}></input>\n                VOD\n                </form>\n            </div>\n        </div>\n        <div className=\"col-md-12\">\n            <Form.Control style={{ display: 'inline-block', width: '60%' }} ref={searchControl} type=\"text\" placeholder=\"search...\" />\n            <Button\n                style={ { display: 'inline-block' } } \n                variant=\"success\" onClick={ searchCallback }>\n                Search\n            </Button>{' '}\n        </div>\n        <div className=\"col-md-8\">\n            { classesList() }\n        </div>\n        <div className=\"col-md-4\">\n            <div>\n            { selectedClassComponent() }\n            </div>\n        </div>\n    </div>\n    </>\n    )\n\n}\n\nexport default MemberAttendance;"]},"metadata":{},"sourceType":"module"}