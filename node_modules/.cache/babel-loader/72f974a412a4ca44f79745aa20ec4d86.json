{"ast":null,"code":"import HTTPClient from \"./http.services\";\n\nclass UsersService {\n  getAllUsers(role) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(role ? \"/get/users?role=\" + role : \"/get/users\").then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getAllRoles() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/roles\").then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getUserById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/user?id=\" + id).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  updateUser(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/update/user\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addUser(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/add/user\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\nexport default new UsersService();","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/services/users.service.js"],"names":["HTTPClient","UsersService","getAllUsers","role","Promise","resolve","reject","get","then","response","data","catch","err","getAllRoles","getUserById","id","updateUser","obj","post","addUser"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,iBAAvB;;AAEA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,MAAAA,UAAU,CAACO,GAAX,CAAeJ,IAAI,GAAG,qBAAqBA,IAAxB,GAA+B,YAAlD,EACGK,IADH,CACSC,QAAD,IAAc;AAClBJ,QAAAA,OAAO,CAAC;AAAEI,UAAAA,QAAQ,EAAEA,QAAQ,CAACC,IAAT,CAAcA;AAA1B,SAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;;AACDC,EAAAA,WAAW,GAAG;AACZ,WAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,MAAAA,UAAU,CAACO,GAAX,CAAe,YAAf,EACGC,IADH,CACSC,QAAD,IAAc;AAClBJ,QAAAA,OAAO,CAAC;AAAEI,UAAAA,QAAQ,EAAEA,QAAQ,CAACC,IAAT,CAAcA;AAA1B,SAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;;AACDE,EAAAA,WAAW,CAACC,EAAD,EAAK;AACd,WAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,MAAAA,UAAU,CAACO,GAAX,CAAe,kBAAkBQ,EAAjC,EACGP,IADH,CACSC,QAAD,IAAc;AAClBJ,QAAAA,OAAO,CAAC;AAAEI,UAAAA,QAAQ,EAAEA,QAAQ,CAACC,IAAT,CAAcA;AAA1B,SAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;;AACDI,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd,WAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,MAAAA,UAAU,CAACkB,IAAX,CAAgB,cAAhB,EAAgCD,GAAhC,EACGT,IADH,CACSC,QAAD,IAAc;AAClBJ,QAAAA,OAAO,CAAC;AAAEI,UAAAA,QAAQ,EAAEA,QAAQ,CAACC,IAAT,CAAcA;AAA1B,SAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;;AACDO,EAAAA,OAAO,CAACF,GAAD,EAAM;AACX,WAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,MAAAA,UAAU,CAACkB,IAAX,CAAgB,WAAhB,EAA6BD,GAA7B,EACGT,IADH,CACSC,QAAD,IAAc;AAClBJ,QAAAA,OAAO,CAAC;AAAEI,UAAAA,QAAQ,EAAEA,QAAQ,CAACC,IAAT,CAAcA;AAA1B,SAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;;AAvDgB;;AA0DnB,eAAe,IAAIX,YAAJ,EAAf","sourcesContent":["import HTTPClient from \"./http.services\";\n\nclass UsersService {\n  getAllUsers(role) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(role ? \"/get/users?role=\" + role : \"/get/users\")\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getAllRoles() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/roles\")\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getUserById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/user?id=\" + id)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  updateUser(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/update/user\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  addUser(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/add/user\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default new UsersService();\n"]},"metadata":{},"sourceType":"module"}