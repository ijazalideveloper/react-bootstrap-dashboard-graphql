{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Controlls/Controlls.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // react-bootstrap components\n\nimport { Card, Table, Container, Row, Col } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Link } from \"react-router-dom\";\nimport services from \"services\";\nimport { useToast } from \"components/Toast\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"components/Loader\";\nimport './Controlls.css';\n\nfunction Controlls() {\n  _s();\n\n  let [isLoading, setIsLoading] = useState(true);\n  let [danceFitToggle, setDanceFitToggle] = useState(0);\n  let [geoIpToggle, setGeoIpToggle] = useState(0);\n  let [apiCall, setApiCall] = useState(false);\n  const toast = useToast();\n\n  const updateAppConfig = obj => {\n    if (apiCall) return;\n    setApiCall(true);\n    services.ControlsService.setAppConfig(obj).then(data => {\n      setApiCall(false); // data.response.data !== danceFitToggle ? setDanceFitToggle(danceFitToggle == 1 ? 0 : 1) :  null.b ;\n\n      setDanceFitToggle(data.response.dancefitIos);\n      setGeoIpToggle(data.response.geoipEnabled);\n      toast.add(\"tr\", \"primary\", \"Done\");\n    }).catch(() => {\n      setApiCall(false);\n      toast.add(\"tr\", \"danger\", \"Error from API side.\");\n    });\n  };\n\n  const fetchAppConfig = () => {\n    services.ControlsService.fetchAppConfig().then(data => {\n      setDanceFitToggle(data.response.dancefitIos);\n      setGeoIpToggle(data.response.geoipEnabled);\n      setIsLoading(false);\n      console.log('state variables', danceFitToggle, geoIpToggle);\n    }).catch(error => {});\n  };\n\n  useEffect(() => {\n    fetchAppConfig();\n  }, []);\n\n  let mainComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"pt-1 ml-5 mr-5\",\n        children: \"Dance Fit Content On IOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-container\",\n        onClick: () => updateAppConfig({\n          dancefitIos: !danceFitToggle\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dialog-button ${danceFitToggle == false ? \"disabled\" : \"enabled\"}`,\n          children: danceFitToggle ? \"Shown\" : \"Hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"pt-1 ml-5 mr-5\",\n        children: \"Geoip Toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-container\",\n        onClick: () => updateAppConfig({\n          geoipEnabled: !geoIpToggle\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dialog-button ${geoIpToggle == false ? \"disabled\" : \"enabled\"}`,\n          children: geoIpToggle ? \"Shown\" : \"Hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 29\n  }, this);\n\n  return isLoading == true ? \"Please wait\" : mainComponent;\n}\n\n_s(Controlls, \"X+SIWeIdf8uhH/carMvhE8HoLMg=\", false, function () {\n  return [useToast];\n});\n\n_c = Controlls;\nexport default Controlls;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controlls\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Controlls/Controlls.js"],"names":["React","useState","useEffect","Card","Table","Container","Row","Col","Formik","Form","Field","ErrorMessage","Link","services","useToast","useDispatch","Loader","Controlls","isLoading","setIsLoading","danceFitToggle","setDanceFitToggle","geoIpToggle","setGeoIpToggle","apiCall","setApiCall","toast","updateAppConfig","obj","ControlsService","setAppConfig","then","data","response","dancefitIos","geoipEnabled","add","catch","fetchAppConfig","console","log","error","mainComponent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// react-bootstrap components\nimport { Card, Table, Container, Row, Col } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nimport { Link } from \"react-router-dom\";\nimport services from \"services\";\nimport { useToast } from \"components/Toast\";\nimport { useDispatch } from \"react-redux\";\nimport Loader from \"components/Loader\";\n\nimport './Controlls.css'\n\nfunction Controlls(){\n\n    let [isLoading, setIsLoading] = useState(true)\n    let [danceFitToggle,setDanceFitToggle] = useState(0);\n    let [geoIpToggle,setGeoIpToggle] = useState(0);\n    let [apiCall, setApiCall] = useState(false)\n    const toast = useToast();\n\n\n    const updateAppConfig = (obj) =>{\n        if (apiCall) return\n        setApiCall(true)\n        services.ControlsService.setAppConfig(obj)\n        .then((data)=>{\n            setApiCall(false)\n            // data.response.data !== danceFitToggle ? setDanceFitToggle(danceFitToggle == 1 ? 0 : 1) :  null.b ;\n            setDanceFitToggle(data.response.dancefitIos);\n            setGeoIpToggle(data.response.geoipEnabled)\n            toast.add(\"tr\", \"primary\", \"Done\");\n        })\n        .catch(()=>{\n            setApiCall(false)\n            toast.add(\"tr\", \"danger\", \"Error from API side.\")\n        })\n        \n    } \n\n    const fetchAppConfig = () => {\n        services.ControlsService.fetchAppConfig()\n        .then((data)=>{\n            setDanceFitToggle(data.response.dancefitIos);\n            setGeoIpToggle(data.response.geoipEnabled)\n            setIsLoading(false)\n            console.log('state variables', danceFitToggle, geoIpToggle)\n        })\n        .catch((error)=>{\n        })\n    }\n\n    useEffect(()=>{\n        fetchAppConfig()\n    },[])\n\n        let mainComponent = <div>\n        <Row>\n            <label className=\"pt-1 ml-5 mr-5\" >Dance Fit Content On IOS</label>\n            <div className=\"toggle-container\" onClick={()=>updateAppConfig({ dancefitIos: !danceFitToggle })}>\n                <div className={`dialog-button ${danceFitToggle == false ? \"disabled\" : \"enabled\"}`}>\n                { danceFitToggle ? \"Shown\" : \"Hidden\"}\n                </div>\n            </div>\n        </Row>\n        <Row>\n            <label className=\"pt-1 ml-5 mr-5\" >Geoip Toggle</label>\n            <div className=\"toggle-container\" onClick={()=>updateAppConfig({ geoipEnabled: !geoIpToggle })}>\n                <div className={`dialog-button ${geoIpToggle == false ? \"disabled\" : \"enabled\"}`}>\n                { geoIpToggle ? \"Shown\" : \"Hidden\"}\n                </div>\n            </div>\n        </Row>\n\n    </div>;\n\n\n    return isLoading == true ? (\"Please wait\") :  mainComponent\n\n    \n}\nexport default Controlls;"]},"metadata":{},"sourceType":"module"}