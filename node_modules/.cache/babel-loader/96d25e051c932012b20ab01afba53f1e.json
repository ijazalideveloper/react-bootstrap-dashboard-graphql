{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/FoodsCategories/createOrEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport FileUpload from \"components/FileUpload/UploadFile\";\nimport services from \"services\";\nimport Loader from \"components/Loader\";\n\nconst AddOrEditFoodCat = props => {\n  _s();\n\n  const toast = useToast();\n  const [isLoading, setIsLoading] = useState(true);\n  const [disable, setDisable] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [initialValues, setInitialValues] = useState({});\n\n  const handleValidations = values => {\n    const errors = {};\n\n    if (!values.name && !values.deletedAt) {\n      errors.name = \"* This field is required\";\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = values => {\n    let foodCatObj = {\n      id: values.id,\n      title: values.title,\n      description: values.description,\n      image: values.image\n    };\n    isEditing ? services.FoodCategoriesService.updateFoodCategory(foodCatObj).then(response => {\n      if (values.deletedAt) {\n        toast.add(\"tr\", \"primary\", \"Food Category Deleted\");\n      } else {\n        toast.add(\"tr\", \"primary\", \"Food Category Updated\");\n      }\n\n      setIsEditing(false);\n      goBack();\n    }) : services.FoodCategoriesService.addFoodCategory(foodCatObj).then(response => {\n      toast.add(\"tr\", \"primary\", \"Food Category Created\");\n      goBack();\n    }).catch(error => {\n      goBack();\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    });\n  };\n\n  const handleDelete = values => {\n    services.FoodCategoriesService.deleteFoodCategory({\n      id: values.id,\n      delete: true\n    }).then(response => {\n      toast.add(\"tr\", \"primary\", \" Food Category Deleted\");\n      goBack();\n    }).catch(error => {\n      goBack();\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    });\n  };\n\n  const getData = async () => {\n    try {\n      var _props$match, _props$match$params;\n\n      let id = props === null || props === void 0 ? void 0 : (_props$match = props.match) === null || _props$match === void 0 ? void 0 : (_props$match$params = _props$match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id;\n\n      if (id) {\n        let data = await services.FoodCategoriesService.getFoodCategoryById(id);\n        data = data.response;\n\n        if (!data) {\n          throw Error(\"Category not Found\");\n        }\n\n        setInitialValues(data);\n        if (data) setIsEditing(true);\n      } // setIsEditing(id);\n\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      toast.add(\"tr\", \"danger\", err.message || (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.code) || \"Something went wrong\");\n      goBack();\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const goBack = () => props.history.push(\"/admin/food-cat\");\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validate: handleValidations,\n      onSubmit: handleSubmit,\n      children: ({\n        isSubmitting,\n        values,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [isEditing ? \"Edit\" : \"Create\", \" Food Category\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light mr-2  \",\n              type: \"button\",\n              onClick: () => goBack(),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success mr-2  btn-fill\",\n              type: \"submit\",\n              onClick: () => {\n                handleSubmit(values);\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"title\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"title\",\n                  component: \"small\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \" Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"description\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n                name: \"image\",\n                type: \"image\",\n                setFieldValue: setFieldValue,\n                link: isEditing ? values.image : '' // link={isEditing ? values.image : \"./\" + values.image}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddOrEditFoodCat, \"5gbwvC6OZhDKmiVb41G/RoBraGo=\", false, function () {\n  return [useToast];\n});\n\n_c = AddOrEditFoodCat;\nexport default AddOrEditFoodCat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrEditFoodCat\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/FoodsCategories/createOrEdit.js"],"names":["React","useState","useEffect","Card","Row","Formik","Form","Field","ErrorMessage","useToast","FileUpload","services","Loader","AddOrEditFoodCat","props","toast","isLoading","setIsLoading","disable","setDisable","isEditing","setIsEditing","initialValues","setInitialValues","handleValidations","values","errors","name","deletedAt","handleSubmit","foodCatObj","id","title","description","image","FoodCategoriesService","updateFoodCategory","then","response","add","goBack","addFoodCategory","catch","error","handleDelete","deleteFoodCategory","delete","getData","match","params","data","getFoodCategoryById","Error","err","message","code","history","push","isSubmitting","setFieldValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport FileUpload from \"components/FileUpload/UploadFile\";\nimport services from \"services\";\nimport Loader from \"components/Loader\";\nconst AddOrEditFoodCat = props => {\n  const toast = useToast();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [disable, setDisable] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [initialValues, setInitialValues] = useState({});\n  const handleValidations = values => {\n    const errors = {};\n    if (!values.name && !values.deletedAt) {\n      errors.name = \"* This field is required\";\n    }\n    return errors;\n  };\n\n  const handleSubmit = values => {\n    let foodCatObj = {\n      id: values.id,\n      title: values.title,\n      description: values.description,\n      image: values.image,\n    };\n    isEditing\n      ? services.FoodCategoriesService.updateFoodCategory(foodCatObj).then(\n          response => {\n            if (values.deletedAt) {\n              toast.add(\"tr\", \"primary\", \"Food Category Deleted\");\n            } else {\n              toast.add(\"tr\", \"primary\", \"Food Category Updated\");\n            }\n            setIsEditing(false);\n            goBack();\n          }\n        )\n      : services.FoodCategoriesService.addFoodCategory(foodCatObj)\n          .then(response => {\n            toast.add(\"tr\", \"primary\", \"Food Category Created\");\n            goBack();\n          })\n          .catch(error => {\n            goBack();\n            toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n          });\n  };\n\n  const handleDelete = values => {\n    services.FoodCategoriesService.deleteFoodCategory({\n      id: values.id,\n      delete: true,\n    })\n      .then(response => {\n        toast.add(\"tr\", \"primary\", \" Food Category Deleted\");\n        goBack();\n      })\n      .catch(error => {\n        goBack();\n        toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n      });\n  };\n\n  const getData = async () => {\n    try {\n      let id = props?.match?.params?.id;\n      if (id) {\n        let data = await services.FoodCategoriesService.getFoodCategoryById(id);\n\n        data = data.response;\n        if (!data) {\n          throw Error(\"Category not Found\");\n        }\n        setInitialValues(data);\n        if (data) setIsEditing(true);\n      }\n      // setIsEditing(id);\n    } catch (err) {\n      toast.add(\n        \"tr\",\n        \"danger\",\n        err.message || err?.response?.data?.code || \"Something went wrong\"\n      );\n      goBack();\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const goBack = () => props.history.push(\"/admin/food-cat\");\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validate={handleValidations}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, values, setFieldValue }) => (\n          <Form>\n            <Row>\n              <div className=\"col\">\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <h2>{isEditing ? \"Edit\" : \"Create\"} Food Category</h2>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-auto\">\n                <button\n                  className=\"btn btn-light mr-2  \"\n                  type=\"button\"\n                  onClick={() => goBack()}\n                >\n                  Back\n                </button>\n                {/* {isEditing && (\n                  <button\n                    className=\"btn btn-secondary mr-2  btn-fill \"\n                    type=\"submit\"\n                    disabled={disable}\n                    onClick={() => {\n                        confirm(\"Are You Sure to delete this ??\") && handleDelete(values)\n                      // setFieldValue(\n                      //   \"deletedAt\",\n                      //   new Date(moment().format(\"YYYY-M-DD HH:mm:ss\"))\n                      // );\n                    }}\n                  >\n                    Delete\n                  </button>\n                )} */}\n                <button\n                  className=\"btn btn-success mr-2  btn-fill\"\n                  type=\"submit\"\n                  onClick={() => {\n                    handleSubmit(values);\n                  }}\n                >\n                  Save\n                </button>\n              </div>\n            </Row>\n\n            <Card>\n              <Card.Body>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Title</label>\n                    <Field name=\"title\" className=\"form-control\" type=\"text\" />\n                    <ErrorMessage\n                      name=\"title\"\n                      component=\"small\"\n                      className=\"text-danger\"\n                    />\n                  </div>\n\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\"> Description</label>\n                    <Field\n                      name=\"description\"\n                      className=\"form-control\"\n                      type=\"text\"\n                    />\n                  </div>\n\n                  <FileUpload\n                    name=\"image\"\n                    type=\"image\"\n                    setFieldValue={setFieldValue}\n                    link={isEditing ? values.image : ''}\n                    // link={isEditing ? values.image : \"./\" + values.image}\n                  />\n                </Row>\n              </Card.Body>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default AddOrEditFoodCat;\n"]},"metadata":{},"sourceType":"module"}