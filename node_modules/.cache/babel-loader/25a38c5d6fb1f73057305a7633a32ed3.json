{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Recipes/RecipeSteps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport services from \"services\";\nimport { useToast } from \"components/Toast\";\nexport default function RecipeSteps(props) {\n  _s();\n\n  const {\n    steps,\n    setFieldValue\n  } = props;\n  const toast = useToast();\n  const [step, setStep] = useState();\n\n  const saveIngredient = () => {\n    if (!step) {\n      toast.add(\"tr\", \"danger\", \"Add Step First\");\n      return;\n    }\n\n    let allSteps = steps ? steps : [];\n    allSteps = [...allSteps, step];\n    setFieldValue(\"steps\", allSteps);\n    setStep(\"\");\n  };\n\n  const handleDelete = index => {\n    let splicedSteps = steps.filter((item, i) => i !== index);\n    setFieldValue(\"steps\", splicedSteps);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" ingredients-form-control d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add Steps\",\n        className: \"step\",\n        name: \"step\",\n        type: \"text\",\n        onChange: e => setStep(e.target.value),\n        value: step\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: saveIngredient,\n        className: \"btn btn-success \",\n        children: \"Add Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), steps === null || steps === void 0 ? void 0 : steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-tag-item mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"step\",\n        children: [\" \", step]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        type: \"span\",\n        className: \"button\",\n        onClick: () => handleDelete(i),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(RecipeSteps, \"6tpy7wRtE8iWWJx/UBRVwsB4RLY=\", false, function () {\n  return [useToast];\n});\n\n_c = RecipeSteps;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeSteps\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Recipes/RecipeSteps.js"],"names":["React","useState","useEffect","services","useToast","RecipeSteps","props","steps","setFieldValue","toast","step","setStep","saveIngredient","add","allSteps","handleDelete","index","splicedSteps","filter","item","i","e","target","value","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2BF,KAAjC;AAEA,QAAMG,KAAK,GAAGL,QAAQ,EAAtB;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;;AAEA,QAAMW,cAAc,GAAG,MAAM;AAC3B,QAAI,CAACF,IAAL,EAAW;AACTD,MAAAA,KAAK,CAACI,GAAN,CACE,IADF,EAEE,QAFF,EAIE,gBAJF;AAMA;AACD;;AACD,QAAIC,QAAQ,GAAGP,KAAK,GAAGA,KAAH,GAAW,EAA/B;AAEAO,IAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAcJ,IAAd,CAAX;AAEAF,IAAAA,aAAa,CAAC,OAAD,EAAUM,QAAV,CAAb;AACAH,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAhBD;;AAiBA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIC,YAAY,GAAGV,KAAK,CAACW,MAAN,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAaA,CAAC,KAAKJ,KAAhC,CAAnB;AAEAR,IAAAA,aAAa,CAAC,OAAD,EAAUS,YAAV,CAAb;AACD,GAJD;;AAKA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,WADd;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,QAAQ,EAAGI,CAAD,IAAOV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAL1B;AAME,QAAA,KAAK,EAAEb;AANT;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAM,QAAA,OAAO,EAAEE,cAAf;AAA+B,QAAA,SAAS,EAAC,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAgBGL,KAhBH,aAgBGA,KAhBH,uBAgBGA,KAAK,CAAEiB,GAAP,CAAW,CAACd,IAAD,EAAOU,CAAP,kBACV;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,wBAAyBV,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,QAA5B;AAAqC,QAAA,OAAO,EAAE,MAAMK,YAAY,CAACK,CAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAA2CA,CAA3C;AAAA;AAAA;AAAA;AAAA,YADD,CAhBH;AAAA,kBADF;AA2BD;;GAxDuBf,W;UAGRD,Q;;;KAHQC,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport services from \"services\";\nimport { useToast } from \"components/Toast\";\n\nexport default function RecipeSteps(props) {\n  const { steps, setFieldValue } = props;\n\n  const toast = useToast();\n\n  const [step, setStep] = useState();\n\n  const saveIngredient = () => {\n    if (!step) {\n      toast.add(\n        \"tr\",\n        \"danger\",\n\n        \"Add Step First\"\n      );\n      return;\n    }\n    let allSteps = steps ? steps : [];\n\n    allSteps = [...allSteps, step];\n\n    setFieldValue(\"steps\", allSteps);\n    setStep(\"\");\n  };\n  const handleDelete = (index) => {\n    let splicedSteps = steps.filter((item, i) => i !== index);\n\n    setFieldValue(\"steps\", splicedSteps);\n  };\n  return (\n    <>\n      <div className=\" ingredients-form-control d-flex\">\n        <input\n          placeholder=\"Add Steps\"\n          className=\"step\"\n          name=\"step\"\n          type=\"text\"\n          onChange={(e) => setStep(e.target.value)}\n          value={step}\n        />\n\n        <span onClick={saveIngredient} className=\"btn btn-success \">\n          Add Step\n        </span>\n      </div>\n\n      {steps?.map((step, i) => (\n        <div className=\"recipe-tag-item mt-2\" key={i}>\n          <span className=\"step\"> {step}</span>\n          <span type=\"span\" className=\"button\" onClick={() => handleDelete(i)}>\n            &times;\n          </span>\n        </div>\n      ))}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}