{"ast":null,"code":"import HTTPClient from \"./http.services\";\n\nclass FoodCategoriesService {\n  getFoodCategories(page = 1, limit = 10) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/foods/categories\").then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addFoodCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/foods/categories\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  updateFoodCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/foods/categories/edit\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  deleteFoodCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/foods/categories/edit\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getFoodCategoryById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/foods/categories/\" + id).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addRemoveFoods(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/foods/categories/populate\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\nexport default new FoodCategoriesService();","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/services/foodCategories.service.js"],"names":["HTTPClient","FoodCategoriesService","getFoodCategories","page","limit","Promise","resolve","reject","get","then","response","data","catch","err","addFoodCategory","obj","post","updateFoodCategory","deleteFoodCategory","getFoodCategoryById","id","addRemoveFoods"],"mappings":"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","sourcesContent":["import HTTPClient from \"./http.services\";\n\nclass FoodCategoriesService {\n  getFoodCategories(page = 1, limit = 10) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/foods/categories\")\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  addFoodCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/foods/categories\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  updateFoodCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/foods/categories/edit\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  deleteFoodCategory(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/foods/categories/edit\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getFoodCategoryById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/foods/categories/\" + id)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  addRemoveFoods(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/foods/categories/populate\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default new FoodCategoriesService();\n"]},"metadata":{},"sourceType":"module"}