{"ast":null,"code":"import HTTPClient from \"./http.services\";\nimport httpMuxService from \"./httpMux.service\";\n\nclass ClassService {\n  getAllClasses(search = '', page = 1, limit = 15) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/all/classes?fromAdmin=true&search=\" + search + \"&page=\" + page + \"&limit=\" + limit).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addClass(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/add/class\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addClassVideo(obj) {\n    console.log(obj, \"from normal one\");\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/file/upload\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addClassVideoMux(obj) {\n    console.log('add class video mux obj', obj);\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/mux/createUploadUrl?title=\" + obj.title).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getMuxAssetFromId(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/mux/getMuxAssetFromId?id=\" + id).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  removeClassVideo(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/file/delete\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  removeClassVideoMux(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/mux/removeMuxAsset?assetId=\" + obj, obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getPlaybackIDLink(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/mux/getPlaybackIDLink?assetId=\" + obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  updateClass(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/update/class\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getClassById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/class?id=\" + id).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getAllClassTypes() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/classTypes\").then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getAllClassEquipments() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/all/classEquipments\").then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  checkSlot(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/check/slot\", obj).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getAllInstructors() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/allInstructors\").then(result => {\n        console.log(\"endpoint hit!!\");\n        resolve({\n          response: result.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getAllReadyVideos() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/mux/videos/ready\").then(result => {\n        console.log(\"endpoint hit!!\");\n        resolve({\n          response: result.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  filterClassAndClassSlots(params) {\n    return (async () => {\n      try {\n        let {\n          search,\n          type\n        } = params;\n        console.log(\"search, type\", search, type);\n        let response = await HTTPClient.get(\"/admin/classes/filterswithslots?psize=100&pnumber=1&slots=5&search=\" + search + \"&type=\" + type);\n\n        if (response.data.data.rows) {\n          return response.data.data.rows;\n        } else {\n          return response.data.data;\n        }\n      } catch (err) {\n        console.log(err);\n        throw new Error(err);\n      }\n    })();\n  }\n\n}\n\nexport default new ClassService();","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/services/classes.service.js"],"names":["HTTPClient","httpMuxService","ClassService","getAllClasses","search","page","limit","Promise","resolve","reject","get","then","response","data","catch","err","addClass","obj","post","addClassVideo","console","log","addClassVideoMux","title","getMuxAssetFromId","id","removeClassVideo","removeClassVideoMux","getPlaybackIDLink","updateClass","getClassById","getAllClassTypes","getAllClassEquipments","checkSlot","getAllInstructors","result","getAllReadyVideos","filterClassAndClassSlots","params","type","rows","Error"],"mappings":"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","sourcesContent":["import HTTPClient from \"./http.services\";\nimport httpMuxService from \"./httpMux.service\";\n\nclass ClassService {\n  getAllClasses(search='', page=1,limit=15) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/all/classes?fromAdmin=true&search=\"+search+\"&page=\"+page+\"&limit=\"+limit)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  addClass(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/add/class\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }z\n  addClassVideo(obj) {\n    console.log(obj , \"from normal one\")\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/file/upload\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  addClassVideoMux(obj) {\n    console.log('add class video mux obj',obj)\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/mux/createUploadUrl?title=\"+obj.title)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getMuxAssetFromId(id){\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/mux/getMuxAssetFromId?id=\"+id)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  removeClassVideo(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/file/delete\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  removeClassVideoMux(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/mux/removeMuxAsset?assetId=\"+obj, obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  getPlaybackIDLink(obj){\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/mux/getPlaybackIDLink?assetId=\"+obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  updateClass(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/update/class\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getClassById(id) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/class?id=\" + id)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getAllClassTypes() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/classTypes\")\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getAllClassEquipments() {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/get/all/classEquipments\")\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  checkSlot(obj) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/check/slot\", obj)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n  getAllInstructors(){\n    return new Promise(\n      (resolve,reject)=>{\n        HTTPClient.get(\"/get/allInstructors\")\n        .then((result)=>{\n          console.log(\"endpoint hit!!\")\n          resolve({ response:result.data.data });\n        })\n        .catch((err)=>{\n          reject(err);\n        })\n      }\n    );\n  }\n  getAllReadyVideos(){\n    return new Promise(\n      (resolve,reject)=>{\n        HTTPClient.get(\"/mux/videos/ready\")\n        .then((result)=>{\n          console.log(\"endpoint hit!!\")\n          resolve({ response:result.data.data });\n        })\n        .catch((err)=>{\n          reject(err);\n        })\n      }\n    );\n  }\n\n  filterClassAndClassSlots(params) {\n    return (async () => {\n      try {\n        let { search, type } = params;\n        console.log(\"search, type\",search, type)\n        let response = await HTTPClient.get(\"/admin/classes/filterswithslots?psize=100&pnumber=1&slots=5&search=\"+search+\"&type=\"+type);\n        if (response.data.data.rows) {\n          return response.data.data.rows\n        } else {\n          return response.data.data\n        }\n      } catch(err) {\n        console.log(err)\n\n        throw new Error(err)\n      }\n    })();\n  }\n}\n\nexport default new ClassService();\n"]},"metadata":{},"sourceType":"module"}