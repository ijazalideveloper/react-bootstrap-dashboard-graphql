{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Banners/createOrEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport FileUpload from \"components/FileUpload/UploadFile\";\nimport services from \"services\";\nimport Loader from \"components/Loader\";\nimport moment from \"moment\";\n\nconst AddOrEditBanner = props => {\n  _s();\n\n  const toast = useToast();\n  const [isLoading, setIsLoading] = useState(true);\n  const [disable, setDisable] = useState(false);\n  const [isEditing, setIsEditing] = useState(null);\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    description: \"\",\n    imageUrl: \"\",\n    url: \"\"\n  });\n\n  const handleValidations = values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"* This field is required\";\n    }\n\n    if (!values.description) {\n      errors.description = \"* This field is required\";\n    }\n\n    return errors;\n  };\n\n  const BannerHandleSubmitAdd = async (values, goBack) => {\n    var _data$response, _data$response$data, _data$response$data$b;\n\n    let data = await services.BannerService.getAllBannersListWithoutPagination();\n    (data === null || data === void 0 ? void 0 : (_data$response = data.response) === null || _data$response === void 0 ? void 0 : (_data$response$data = _data$response.data) === null || _data$response$data === void 0 ? void 0 : (_data$response$data$b = _data$response$data.banners) === null || _data$response$data$b === void 0 ? void 0 : _data$response$data$b.filter(e => e.name === values.name).length) > 0 ? alert('Banner already exists') : services.BannerService.addBanner(values).then(response => {\n      toast.add(\"tr\", \"primary\", \"Banner Created\");\n      goBack();\n    }).catch(error => {\n      goBack();\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    });\n  };\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    let valuesUpdated = {\n      name: values.name,\n      description: values.description,\n      imageUrl: values.imageUrl,\n      url: values.url\n    };\n\n    if (!values.imageUrl) {\n      toast.add(\"tr\", \"danger\", \"Banner Image is required\");\n      return;\n    }\n\n    let obj = values;\n    isEditing ? obj[\"id\"] = values.id : null;\n    isEditing ? services.BannerService.updateBanner(obj.id, valuesUpdated).then(response => {\n      if (values.deletedAt) {\n        toast.add(\"tr\", \"primary\", \"Banner Deleted\");\n      } else {\n        toast.add(\"tr\", \"primary\", \"Banner Updated\");\n      }\n\n      setIsEditing(false);\n      goBack();\n    }) : BannerHandleSubmitAdd(obj, goBack); // : services.BannerService.addBanner(obj)\n    //     .then((response) => {\n    //       toast.add(\"tr\", \"primary\", \"Banner Created\");\n    //       goBack();\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //       goBack();\n    //       toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    //     });\n\n    setSubmitting(false);\n    setDisable(true);\n  };\n\n  const getData = async () => {\n    try {\n      var _props$match, _props$match$params;\n\n      let id = props === null || props === void 0 ? void 0 : (_props$match = props.match) === null || _props$match === void 0 ? void 0 : (_props$match$params = _props$match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id;\n\n      if (id) {\n        let data = await services.BannerService.getBannerById(id);\n        data = data.response.data.banner;\n\n        if (!data) {\n          throw Error(\"Banner not Found\");\n        }\n\n        setInitialValues(data);\n      }\n\n      setIsEditing(id);\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      console.log(\"err.response\", err.response);\n      toast.add(\"tr\", \"danger\", err.message || (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.code) || \"Something went wrong\");\n      goBack();\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleDelete = values => {\n    services.BannerService.delBanner(values.id).then(response => {\n      toast.add(\"tr\", \"primary\", \"Banner Deleted\");\n      goBack();\n    }).catch(error => {\n      goBack();\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const goBack = () => props.history.push(\"/admin/banners\");\n\n  return !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validate: handleValidations,\n      onSubmit: handleSubmit,\n      children: ({\n        isSubmitting,\n        values,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [isEditing ? \"Edit\" : \"Create\", \" Banner\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light mr-2  \",\n              type: \"button\",\n              onClick: () => goBack(),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary mr-2  btn-fill \",\n              type: \"submit\",\n              disabled: disable,\n              onClick: () => {\n                confirm(\"Are You Sure to delete this ??\") && handleDelete(values);\n                setFieldValue(\"deletedAt\", new Date(moment().format(\"YYYY-M-DD HH:mm:ss\")));\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success mr-2  btn-fill\",\n              type: \"submit\" // disabled={disable}\n              // disabled={isSubmitting}\n              ,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"name\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"name\",\n                  component: \"small\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"description\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"description\",\n                  component: \"small\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n                name: \"imageUrl\",\n                type: \"image\",\n                setFieldValue: setFieldValue,\n                link: isEditing ? values.imageUrl : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"url\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"description\",\n                  component: \"small\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddOrEditBanner, \"JEc9dlKMLWsdrd7Mcfd9Y8a1Z+Q=\", false, function () {\n  return [useToast];\n});\n\n_c = AddOrEditBanner;\nexport default AddOrEditBanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrEditBanner\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Banners/createOrEdit.js"],"names":["React","useState","useEffect","Card","Row","Formik","Form","Field","ErrorMessage","useToast","FileUpload","services","Loader","moment","AddOrEditBanner","props","toast","isLoading","setIsLoading","disable","setDisable","isEditing","setIsEditing","initialValues","setInitialValues","name","description","imageUrl","url","handleValidations","values","errors","BannerHandleSubmitAdd","goBack","data","BannerService","getAllBannersListWithoutPagination","response","banners","filter","e","length","alert","addBanner","then","add","catch","error","handleSubmit","setSubmitting","valuesUpdated","obj","id","updateBanner","deletedAt","getData","match","params","getBannerById","banner","Error","err","console","log","message","code","handleDelete","delBanner","history","push","isSubmitting","setFieldValue","confirm","Date","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport FileUpload from \"components/FileUpload/UploadFile\";\nimport services from \"services\";\nimport Loader from \"components/Loader\";\nimport moment from \"moment\";\n\nconst AddOrEditBanner = (props) => {\n  const toast = useToast();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [disable, setDisable] = useState(false);\n  const [isEditing, setIsEditing] = useState(null);\n\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    description: \"\",\n    imageUrl: \"\",\n    url: \"\",\n  });\n\n  const handleValidations = (values) => {\n    const errors = {};\n    if (!values.name) {\n      errors.name = \"* This field is required\";\n    }\n    if (!values.description) {\n      errors.description = \"* This field is required\";\n    }\n\n    return errors;\n  };\n\n  const BannerHandleSubmitAdd = async (values, goBack) => {\n    let data = await services.BannerService.getAllBannersListWithoutPagination();\n    data?.response?.data?.banners?.filter(e => e.name === values.name).length > 0 ? (alert('Banner already exists')) \n    : services.BannerService.addBanner(values)\n      .then((response) => {\n        toast.add(\"tr\", \"primary\", \"Banner Created\");\n        goBack();\n      })\n      .catch((error) => {\n        goBack();\n        toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n      });\n  };\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    let valuesUpdated = {\n      name: values.name,\n      description: values.description,\n      imageUrl: values.imageUrl,\n      url: values.url,\n    }\n    if (!values.imageUrl) {\n      toast.add(\"tr\", \"danger\", \"Banner Image is required\");\n      return;\n    }\n    let obj = values;\n\n    isEditing ? (obj[\"id\"] = values.id) : null;\n    isEditing\n      ? services.BannerService.updateBanner(obj.id, valuesUpdated).then((response) => {\n          if (values.deletedAt) {\n            toast.add(\"tr\", \"primary\", \"Banner Deleted\");\n          } else {\n            toast.add(\"tr\", \"primary\", \"Banner Updated\");\n          }\n          setIsEditing(false);\n          goBack();\n        })\n      : BannerHandleSubmitAdd(obj, goBack)\n      // : services.BannerService.addBanner(obj)\n      //     .then((response) => {\n      //       toast.add(\"tr\", \"primary\", \"Banner Created\");\n      //       goBack();\n      //     })\n\n      //     .catch((error) => {\n      //       console.log(error);\n      //       goBack();\n      //       toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n      //     });\n\n    setSubmitting(false);\n    setDisable(true);\n  };\n\n  const getData = async () => {\n    try {\n      let id = props?.match?.params?.id;\n      if (id) {\n        let data = await services.BannerService.getBannerById(id);\n\n        data = data.response.data.banner;\n        if (!data) {\n          throw Error(\"Banner not Found\");\n        }\n        setInitialValues(data);\n      }\n      setIsEditing(id);\n    } catch (err) {\n      console.log(\"err.response\", err.response);\n\n      toast.add(\n        \"tr\",\n        \"danger\",\n        err.message || err?.response?.data?.code || \"Something went wrong\"\n      );\n\n      goBack();\n    }\n    setIsLoading(false);\n  };\n\n  const handleDelete = values => {\n    services.BannerService.delBanner(values.id)\n      .then(response => {\n        toast.add(\"tr\", \"primary\", \"Banner Deleted\");\n        goBack();\n      })\n      .catch(error => {\n        goBack();\n        toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const goBack = () => props.history.push(\"/admin/banners\");\n  return !isLoading ? (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validate={handleValidations}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, values, setFieldValue }) => (\n          <Form>\n            <Row>\n              <div className=\"col\">\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <h2>{isEditing ? \"Edit\" : \"Create\"} Banner</h2>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-auto\">\n                <button\n                  className=\"btn btn-light mr-2  \"\n                  type=\"button\"\n                  onClick={() => goBack()}\n                >\n                  Back\n                </button>\n                {isEditing && (\n                  <button\n                    className=\"btn btn-secondary mr-2  btn-fill \"\n                    type=\"submit\"\n                    disabled={disable}\n                    onClick={() => {\n                      confirm(\"Are You Sure to delete this ??\") && handleDelete(values)\n                      setFieldValue(\n                        \"deletedAt\",\n                        new Date(moment().format(\"YYYY-M-DD HH:mm:ss\"))\n                      );\n                    }}\n                  >\n                    Delete\n                  </button>\n                )}\n                <button\n                  className=\"btn btn-success mr-2  btn-fill\"\n                  type=\"submit\"\n                  // disabled={disable}\n                  // disabled={isSubmitting}\n                >\n                  Save\n                </button>\n              </div>\n            </Row>\n\n            <Card>\n              <Card.Body>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Name</label>\n                    <Field name=\"name\" className=\"form-control\" type=\"text\" />\n                    <ErrorMessage\n                      name=\"name\"\n                      component=\"small\"\n                      className=\"text-danger\"\n                    />\n                  </div>\n                  \n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Description</label>\n                    <Field name=\"description\" className=\"form-control\" type=\"text\" />\n                    <ErrorMessage\n                      name=\"description\"\n                      component=\"small\"\n                      className=\"text-danger\"\n                    />\n                  </div>\n                  \n                </Row>\n                <Row>\n                  <FileUpload\n                    name=\"imageUrl\"\n                    type=\"image\"\n                    setFieldValue={setFieldValue}\n                    link={isEditing ? values.imageUrl : ''}\n                  />\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">URL</label>\n                    <Field name=\"url\" className=\"form-control\" type=\"text\" />\n                    <ErrorMessage\n                      name=\"description\"\n                      component=\"small\"\n                      className=\"text-danger\"\n                    />\n                  </div>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default AddOrEditBanner;\n"]},"metadata":{},"sourceType":"module"}