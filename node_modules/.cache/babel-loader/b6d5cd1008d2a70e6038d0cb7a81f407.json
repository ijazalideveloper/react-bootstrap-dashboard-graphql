{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/DietPlans/createOrEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Table, Container, Row, Col } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport services from \"services\";\nimport moment from \"moment\";\nimport Loader from \"components/Loader\";\nimport Select from \"react-select\";\nimport AsyncSelect from 'react-select/async';\nimport makeAnimated from \"react-select/animated\";\nimport FileUpload from \"components/FileUpload/UploadFile\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport ShiftDetails from \"./ShiftDetails\";\n\nconst AddOrEditDietPlan = props => {\n  _s();\n\n  const animatedComponents = makeAnimated();\n  const toast = useToast();\n  const [days, setDays] = useState([]);\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [members, setMemebers] = useState();\n  const [isEditing, setIsEditing] = useState(null);\n  const [memberOptions, setMemberOptions] = useState();\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    icon: \"\",\n    activeFrom: \"\",\n    activeTill: \"\",\n    disabled: 0,\n    shifts: [],\n    members: []\n  });\n\n  const handleValidations = values => {\n    const errors = {};\n\n    if (!values.name && !values.deletedAt) {\n      errors.name = \"* This field is required\";\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    if (!values.deletedAt) {\n      if (!values.activeFrom) {\n        toast.add(\"tr\", \"danger\", \"Add Diet Plan Validity First\");\n        return;\n      }\n\n      if (!values.icon) {\n        toast.add(\"tr\", \"danger\", \"Icon is required\");\n        return;\n      }\n\n      let notValidShifts = true;\n      days.map(day => {\n        day.shifts.map(shift => {\n          if (!shift.recipes) {\n            notValidShifts = false;\n          } else {\n            shift.recipes.map(recipe => {\n              return recipe.value;\n            });\n            return shift;\n          }\n        });\n      });\n\n      if (!notValidShifts) {\n        toast.add(\"tr\", \"danger\", \"Please assign recipe to each shift in a day first\");\n        return;\n      }\n    }\n\n    let planObj = {\n      name: values.name,\n      days: days,\n      icon: values.icon,\n      activeFrom: values.activeFrom,\n      activeTill: values.activeTill,\n      disabled: values.disabled,\n      members: members ? values.members.map(member => {\n        return member.value;\n      }) : null\n    };\n\n    if (values.deletedAt) {\n      planObj.deletedAt = values.deletedAt;\n    }\n\n    isEditing ? planObj[\"id\"] = values.id : null;\n    isEditing ? services.DietPlanService.updateDietPlan(planObj).then(response => {\n      if (values.deletedAt) {\n        toast.add(\"tr\", \"primary\", \"Plan Deleted\");\n      } else {\n        toast.add(\"tr\", \"primary\", \"Plan Updated\");\n      }\n\n      goBack();\n    }) : services.DietPlanService.addDietPlan(planObj).then(response => {\n      toast.add(\"tr\", \"primary\", \"Plan Created\");\n      goBack();\n    }).catch(error => {\n      console.log(error);\n      goBack();\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n    });\n    setSubmitting(false);\n  };\n\n  const getData = async () => {\n    try {\n      var _props$match, _props$match$params;\n\n      let id = props === null || props === void 0 ? void 0 : (_props$match = props.match) === null || _props$match === void 0 ? void 0 : (_props$match$params = _props$match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id;\n\n      if (id) {\n        let data = await services.DietPlanService.getPlanById(id);\n        data = data.response;\n\n        if (!data) {\n          throw Error(\"Plan not Found\");\n        }\n\n        data[\"members\"] = data.members.map(member => {\n          let option = {\n            value: member.id,\n            label: member.fullName\n          };\n          return option;\n        });\n\n        if (data.days) {\n          setDays(data.days);\n        }\n\n        setInitialValues(data);\n      }\n\n      setIsEditing(id);\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      console.log(\"err.response\", err.response);\n      toast.add(\"tr\", \"danger\", err.message || (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.code) || \"Something went wrong\");\n      goBack();\n    }\n\n    setIsLoading(false);\n  };\n\n  const getOptions = async (search, callback) => {\n    let data = await services.MemberService.getAllMembers(search, 1, 10);\n    let members = data.response.data;\n    let options = members === null || members === void 0 ? void 0 : members.map(member => {\n      let option = {\n        value: member.id,\n        label: member.fullName\n      };\n      return option;\n    });\n    return callback(options);\n  };\n\n  const getAllMembers = async () => {\n    try {\n      getOptions(\"\", setMemberOptions);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n\n      console.log(\"err.response\", err.response);\n      toast.add(\"tr\", \"danger\", err.message || (err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.code) || \"Something went wrong\");\n    }\n  };\n\n  const getAllRecipes = async () => {\n    try {\n      let data = await services.RecipeService.getAllRecipes();\n      let recipes = data.response;\n      let options = recipes === null || recipes === void 0 ? void 0 : recipes.map(recipe => {\n        let option = {\n          value: recipe.id,\n          label: recipe.name\n        };\n        return option;\n      });\n      setRecipes(options);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n\n      console.log(\"err.response\", err.response);\n      toast.add(\"tr\", \"danger\", err.message || (err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.code) || \"Something went wrong\");\n    }\n  };\n\n  const getDays = async () => {\n    try {\n      let data = await services.DietPlanService.getAllDays();\n      let days = data.response;\n      setDays(days);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n\n      console.log(\"err.response\", err.response);\n      toast.add(\"tr\", \"danger\", err.message || (err === null || err === void 0 ? void 0 : (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.code) || \"Something went wrong\");\n    }\n  };\n\n  useEffect(() => {\n    getAllMembers();\n    getAllRecipes();\n    getData();\n    getDays();\n  }, []);\n\n  const goBack = () => props.history.push(\"/admin/diet-plans\");\n\n  return !isLoading ? /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validate: handleValidations,\n      onSubmit: handleSubmit,\n      children: ({\n        isSubmitting,\n        values,\n        errors,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [isEditing ? \"Edit\" : \"Create\", \" Diet Plans\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light mr-2  \",\n              type: \"button\",\n              onClick: () => goBack(),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary mr-2  btn-fill \",\n              type: \"submit\",\n              onClick: () => {\n                setFieldValue(\"deletedAt\", new Date(moment().format(\"YYYY-M-DD HH:mm:ss\")));\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success mr-2  btn-fill\",\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"name\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"name\",\n                  component: \"small\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n                name: \"icon\",\n                setFieldValue: setFieldValue,\n                type: \"image\",\n                link: values.icon,\n                error: errors.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Selected Memebers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AsyncSelect, {\n                  name: \"members\",\n                  closeMenuOnSelect: false,\n                  isMulti: true,\n                  components: animatedComponents,\n                  defaultValue: values.members,\n                  placeholder: \"Select Diet Plan Members\",\n                  loadOptions: getOptions,\n                  defaultOptions: memberOptions // options={memberOptions}\n                  ,\n                  onChange: selectedOption => {\n                    // debugger;\n                    setMemebers(selectedOption);\n                    setFieldValue(\"members\", selectedOption);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Select Range From Monday To Sunday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n                  name: \"activeFrom\",\n                  className: \"col-sm-6 form-group\",\n                  onCallback: (start, end, label) => {\n                    if (new Date(start).getDay() == 1 && new Date(end).getDay() == 0) {\n                      setFieldValue(\"activeTill\", new Date(moment(end).format(\"YYYY-M-DD HH:mm:ss\")));\n                      setFieldValue(\"activeFrom\", new Date(moment(start).format(\"YYYY-M-DD HH:mm:ss\")));\n                    } else {\n                      toast.add(\"tr\", \"danger\", \"Start day should be monday & end on sunday \");\n                    }\n                  },\n                  initialSettings: {\n                    parentEl: \".unique-class\",\n                    startDate: values.activeFrom ? moment(values.activeFrom).format(\"M/DD/YYYY hh:mm:ss A\") : moment().startOf(\"hour\").toDate(),\n                    endDate: values.activeTill ? moment(values.activeTill).format(\"M/DD/YYYY hh:mm:ss A\") : moment().startOf(\"hour\").toDate(),\n                    locale: {\n                      firstDay: 1\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Active Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"toggleWrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"disabled\",\n                    type: \"checkbox\",\n                    className: \"form-control\",\n                    id: \"toggle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"toggle\",\n                    class: \"toggle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), days.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 diet-plan-dates-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Add Shift Details in Each Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"th\",\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"th\",\n                  children: \"Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"th\",\n                  children: \"Add Shift Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this), days === null || days === void 0 ? void 0 : days.map((day, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: day.toggle ? \"collapsed\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  className: \"head-row\",\n                  onClick: () => {\n                    let dayArray = days.map((day, i) => {\n                      if (i == key) {\n                        day[\"toggle\"] = !day[\"toggle\"];\n                      } else {\n                        day[\"toggle\"] = false;\n                      }\n\n                      return day;\n                    });\n                    setDays([...dayArray]);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: day.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: day.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"editBtn\",\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-arrow-down\",\n                        color: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 27\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 25\n                }, this), day.toggle ? /*#__PURE__*/_jsxDEV(ShiftDetails, {\n                  day: day,\n                  setDays: setDays,\n                  recipes: recipes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 27\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddOrEditDietPlan, \"91/j/IMJZX/rgn4qTG7cI0d3dO4=\", false, function () {\n  return [useToast];\n});\n\n_c = AddOrEditDietPlan;\nexport default AddOrEditDietPlan;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrEditDietPlan\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/DietPlans/createOrEdit.js"],"names":["React","useState","useEffect","Card","Table","Container","Row","Col","Formik","Form","Field","ErrorMessage","useToast","services","moment","Loader","Select","AsyncSelect","makeAnimated","FileUpload","DateRangePicker","ShiftDetails","AddOrEditDietPlan","props","animatedComponents","toast","days","setDays","recipes","setRecipes","isLoading","setIsLoading","members","setMemebers","isEditing","setIsEditing","memberOptions","setMemberOptions","initialValues","setInitialValues","name","icon","activeFrom","activeTill","disabled","shifts","handleValidations","values","errors","deletedAt","handleSubmit","setSubmitting","add","notValidShifts","map","day","shift","recipe","value","planObj","member","id","DietPlanService","updateDietPlan","then","response","goBack","addDietPlan","catch","error","console","log","getData","match","params","data","getPlanById","Error","option","label","fullName","err","message","code","getOptions","search","callback","MemberService","getAllMembers","options","getAllRecipes","RecipeService","getDays","getAllDays","history","push","isSubmitting","setFieldValue","Date","format","selectedOption","start","end","getDay","parentEl","startDate","startOf","toDate","endDate","locale","firstDay","length","key","toggle","dayArray","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Table, Container, Row, Col } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport services from \"services\";\nimport moment from \"moment\";\nimport Loader from \"components/Loader\";\nimport Select from \"react-select\";\nimport AsyncSelect from 'react-select/async';\n\nimport makeAnimated from \"react-select/animated\";\nimport FileUpload from \"components/FileUpload/UploadFile\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport ShiftDetails from \"./ShiftDetails\";\nconst AddOrEditDietPlan = (props) => {\n  const animatedComponents = makeAnimated();\n\n  const toast = useToast();\n  const [days, setDays] = useState([]);\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [members, setMemebers] = useState();\n  const [isEditing, setIsEditing] = useState(null);\n  const [memberOptions, setMemberOptions] = useState();\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    icon: \"\",\n    activeFrom: \"\",\n    activeTill: \"\",\n    disabled: 0,\n    shifts: [],\n    members: [],\n  });\n\n  const handleValidations = (values) => {\n    const errors = {};\n    if (!values.name && !values.deletedAt) {\n      errors.name = \"* This field is required\";\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    if (!values.deletedAt) {\n      if (!values.activeFrom) {\n        toast.add(\"tr\", \"danger\", \"Add Diet Plan Validity First\");\n        return;\n      }\n      if (!values.icon) {\n        toast.add(\"tr\", \"danger\", \"Icon is required\");\n        return;\n      }\n\n      let notValidShifts = true;\n      days.map((day) => {\n        day.shifts.map((shift) => {\n          if (!shift.recipes) {\n            notValidShifts = false;\n          } else {\n            shift.recipes.map((recipe) => {\n              return recipe.value;\n            });\n            return shift;\n          }\n        });\n      });\n\n      if (!notValidShifts) {\n        toast.add(\n          \"tr\",\n          \"danger\",\n          \"Please assign recipe to each shift in a day first\"\n        );\n        return;\n      }\n    }\n    let planObj = {\n      name: values.name,\n      days: days,\n      icon: values.icon,\n      activeFrom: values.activeFrom,\n      activeTill: values.activeTill,\n      disabled: values.disabled,\n\n      members: members\n        ? values.members.map((member) => {\n          return member.value;\n        })\n        : null,\n    };\n    if (values.deletedAt) {\n      planObj.deletedAt = values.deletedAt;\n    }\n    isEditing ? (planObj[\"id\"] = values.id) : null;\n    isEditing\n      ? services.DietPlanService.updateDietPlan(planObj).then((response) => {\n        if (values.deletedAt) {\n          toast.add(\"tr\", \"primary\", \"Plan Deleted\");\n        } else {\n          toast.add(\"tr\", \"primary\", \"Plan Updated\");\n        }\n        goBack();\n      })\n      : services.DietPlanService.addDietPlan(planObj)\n        .then((response) => {\n          toast.add(\"tr\", \"primary\", \"Plan Created\");\n          goBack();\n        })\n\n        .catch((error) => {\n          console.log(error);\n          goBack();\n          toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n        });\n\n    setSubmitting(false);\n  };\n\n  const getData = async () => {\n    try {\n      let id = props?.match?.params?.id;\n      if (id) {\n        let data = await services.DietPlanService.getPlanById(id);\n\n        data = data.response;\n        if (!data) {\n          throw Error(\"Plan not Found\");\n        }\n        data[\"members\"] = data.members.map((member) => {\n          let option = {\n            value: member.id,\n            label: member.fullName,\n          };\n          return option;\n        });\n\n        if (data.days) {\n          setDays(data.days);\n        }\n        setInitialValues(data);\n      }\n      setIsEditing(id);\n    } catch (err) {\n      console.log(\"err.response\", err.response);\n\n      toast.add(\n        \"tr\",\n        \"danger\",\n        err.message || err?.response?.data?.code || \"Something went wrong\"\n      );\n\n      goBack();\n    }\n    setIsLoading(false);\n  };\n\n  const getOptions = async (search, callback) =>{\n\n    let data = await services.MemberService.getAllMembers(search,1,10);\n    let members = data.response.data;\n    let options = members?.map((member) => {\n      let option = {\n        value: member.id,\n        label: member.fullName,\n      };\n      return option;\n    });\n    return callback(options);\n  }\n\n  const getAllMembers = async () => {\n    try {\n      \n      getOptions(\"\",setMemberOptions);\n\n    } catch (err) {\n      console.log(\"err.response\", err.response);\n\n      toast.add(\n        \"tr\",\n        \"danger\",\n        err.message || err?.response?.data?.code || \"Something went wrong\"\n      );\n    }\n  };\n  const getAllRecipes = async () => {\n    try {\n      let data = await services.RecipeService.getAllRecipes();\n      let recipes = data.response;\n      let options = recipes?.map((recipe) => {\n        let option = {\n          value: recipe.id,\n          label: recipe.name,\n        };\n        return option;\n      });\n      setRecipes(options);\n    } catch (err) {\n      console.log(\"err.response\", err.response);\n\n      toast.add(\n        \"tr\",\n        \"danger\",\n        err.message || err?.response?.data?.code || \"Something went wrong\"\n      );\n    }\n  };\n  const getDays = async () => {\n    try {\n      let data = await services.DietPlanService.getAllDays();\n      let days = data.response;\n\n      setDays(days);\n    } catch (err) {\n      console.log(\"err.response\", err.response);\n\n      toast.add(\n        \"tr\",\n        \"danger\",\n        err.message || err?.response?.data?.code || \"Something went wrong\"\n      );\n    }\n  };\n  useEffect(() => {\n    getAllMembers();\n    getAllRecipes();\n    getData();\n    getDays();\n  }, []);\n\n  const goBack = () => props.history.push(\"/admin/diet-plans\");\n  return !isLoading ? (\n    <Container fluid>\n      <Formik\n        initialValues={initialValues}\n        validate={handleValidations}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, values, errors, setFieldValue }) => (\n          <Form>\n            <Row>\n              <div className=\"col\">\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <h2>{isEditing ? \"Edit\" : \"Create\"} Diet Plans</h2>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-auto\">\n                <button\n                  className=\"btn btn-light mr-2  \"\n                  type=\"button\"\n                  onClick={() => goBack()}\n                >\n                  Back\n                </button>\n                {isEditing && (\n                  <button\n                    className=\"btn btn-secondary mr-2  btn-fill \"\n                    type=\"submit\"\n                    onClick={() => {\n                      setFieldValue(\n                        \"deletedAt\",\n                        new Date(moment().format(\"YYYY-M-DD HH:mm:ss\"))\n                      );\n                    }}\n                  >\n                    Delete\n                  </button>\n                )}\n                <button\n                  className=\"btn btn-success mr-2  btn-fill\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Save\n                </button>\n              </div>\n            </Row>\n\n            <Card>\n              <Card.Body>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Name</label>\n                    <Field name=\"name\" className=\"form-control\" type=\"text\" />\n                    <ErrorMessage\n                      name=\"name\"\n                      component=\"small\"\n                      className=\"text-danger\"\n                    />\n                  </div>\n\n                  <FileUpload\n                    name=\"icon\"\n                    setFieldValue={setFieldValue}\n                    type=\"image\"\n                    link={values.icon}\n                    error={errors.icon}\n                  />\n                </Row>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Selected Memebers</label>\n\n                    <AsyncSelect\n                      name=\"members\"\n                      closeMenuOnSelect={false}\n                      isMulti\n                      components={animatedComponents}\n                      defaultValue={values.members}\n                      placeholder=\"Select Diet Plan Members\"\n                      loadOptions={getOptions}\n                      defaultOptions={memberOptions}\n                      // options={memberOptions}\n                      onChange={(selectedOption) => {\n                        // debugger;\n                        setMemebers(selectedOption);\n                        setFieldValue(\"members\", selectedOption);\n                      }}\n                    />\n                  </div>\n                  <div className=\"col-sm-4 form-group\">\n                    <label htmlFor=\"\">Select Range From Monday To Sunday</label>\n                    <DateRangePicker\n                      name=\"activeFrom\"\n                      className=\"col-sm-6 form-group\"\n                      onCallback={(start, end, label) => {\n                        if (\n                          new Date(start).getDay() == 1 &&\n                          new Date(end).getDay() == 0\n                        ) {\n                          setFieldValue(\n                            \"activeTill\",\n                            new Date(moment(end).format(\"YYYY-M-DD HH:mm:ss\"))\n                          );\n                          setFieldValue(\n                            \"activeFrom\",\n                            new Date(moment(start).format(\"YYYY-M-DD HH:mm:ss\"))\n                          );\n                        } else {\n                          toast.add(\n                            \"tr\",\n                            \"danger\",\n                            \"Start day should be monday & end on sunday \"\n                          );\n                        }\n                      }}\n                      initialSettings={{\n                        parentEl: \".unique-class\",\n\n                        startDate: values.activeFrom\n                          ? moment(values.activeFrom).format(\n                            \"M/DD/YYYY hh:mm:ss A\"\n                          )\n                          : moment().startOf(\"hour\").toDate(),\n                        endDate: values.activeTill\n                          ? moment(values.activeTill).format(\n                            \"M/DD/YYYY hh:mm:ss A\"\n                          )\n                          : moment().startOf(\"hour\").toDate(),\n                        locale: {\n                          firstDay: 1,\n                        },\n                      }}\n                    >\n                      <input type=\"text\" className=\"form-control\" />\n                    </DateRangePicker>\n                  </div>\n                  <div className=\"col form-group\">\n                    <label>Active Status</label>\n                    <div class=\"toggleWrapper\">\n                      <Field\n                        name=\"disabled\"\n                        type=\"checkbox\"\n                        className=\"form-control\"\n                        id=\"toggle\"\n                      />\n\n                      <label for=\"toggle\" class=\"toggle\"></label>\n                    </div>\n                  </div>\n                </Row>\n                <Row></Row>\n                {days.length ? (\n                  <div className=\"mt-3 diet-plan-dates-table\">\n                    <h4>Add Shift Details in Each Day</h4>\n                    <Row>\n                      <Col className=\"th\">ID</Col>\n\n                      <Col className=\"th\">Day</Col>\n                      <Col className=\"th\">Add Shift Details</Col>\n                    </Row>\n                    {days?.map((day, key) => (\n                      <div className={day.toggle ? \"collapsed\" : \"\"}>\n                        <Row\n                          className=\"head-row\"\n                          key={key}\n                          onClick={() => {\n                            let dayArray = days.map((day, i) => {\n                              if (i == key) {\n                                day[\"toggle\"] = !day[\"toggle\"];\n                              } else {\n                                day[\"toggle\"] = false;\n                              }\n                              return day;\n                            });\n\n                            setDays([...dayArray]);\n                          }}\n                        >\n                          <Col>{day.id}</Col>\n\n                          <Col>{day.name}</Col>\n                          <Col>\n                            <span className=\"editBtn\">\n                              <i\n                                className=\"fa fa-arrow-down\"\n                                color=\"primary\"\n                              ></i>\n                            </span>\n                          </Col>\n                        </Row>\n                        {day.toggle ? (\n                          <ShiftDetails\n                            day={day}\n                            setDays={setDays}\n                            recipes={recipes}\n                          />\n                        ) : null}\n                      </div>\n                    ))}\n                  </div>\n                ) : null}\n              </Card.Body>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default AddOrEditDietPlan;\n"]},"metadata":{},"sourceType":"module"}