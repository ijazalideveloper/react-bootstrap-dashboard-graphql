{"ast":null,"code":"import HTTPClient from \"./http.services\";\n\nclass MuxService {\n  getAllMuxVideos(body) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/mux/videos\", body).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getAllVideos(search, page, limit) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/mux/videos?search=\" + search + \"&page=\" + page + \"&limit=\" + limit).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  addVideo(body) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/mux/save\", body).then(response => {\n        resolve({\n          response: response.data.data\n        });\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\nexport default new MuxService();","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/services/muxvideos.service.js"],"names":["HTTPClient","MuxService","getAllMuxVideos","body","Promise","resolve","reject","post","then","response","data","catch","err","getAllVideos","search","page","limit","get","addVideo"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,iBAAvB;;AAEA,MAAMC,UAAN,CAAiB;AAEfC,EAAAA,eAAe,CAACC,IAAD,EAAO;AACpB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,MAAAA,UAAU,CAACO,IAAX,CAAgB,aAAhB,EAA+BJ,IAA/B,EACGK,IADH,CACSC,QAAD,IAAc;AAClBJ,QAAAA,OAAO,CAAC;AAAEI,UAAAA,QAAQ,EAAEA,QAAQ,CAACC,IAAT,CAAcA;AAA1B,SAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;;AAEDC,EAAAA,YAAY,CAACC,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAsB;AAChC,WAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,MAAAA,UAAU,CAACiB,GAAX,CAAe,wBAAsBH,MAAtB,GAA6B,QAA7B,GAAsCC,IAAtC,GAA2C,SAA3C,GAAqDC,KAApE,EACGR,IADH,CACSC,QAAD,IAAc;AAClBJ,QAAAA,OAAO,CAAC;AAAEI,UAAAA,QAAQ,EAAEA,QAAQ,CAACC,IAAT,CAAcA;AAA1B,SAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;;AAEDM,EAAAA,QAAQ,CAACf,IAAD,EAAO;AACb,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCN,MAAAA,UAAU,CAACO,IAAX,CAAgB,WAAhB,EAA6BJ,IAA7B,EACGK,IADH,CACSC,QAAD,IAAc;AAClBJ,QAAAA,OAAO,CAAC;AAAEI,UAAAA,QAAQ,EAAEA,QAAQ,CAACC,IAAT,CAAcA;AAA1B,SAAD,CAAP;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdN,QAAAA,MAAM,CAACM,GAAD,CAAN;AACD,OANH;AAOD,KARM,CAAP;AASD;;AApCc;;AAwCjB,eAAe,IAAIX,UAAJ,EAAf","sourcesContent":["import HTTPClient from \"./http.services\";\n\nclass MuxService {\n\n  getAllMuxVideos(body) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/mux/videos\", body)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  getAllVideos(search, page, limit) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.get(\"/mux/videos?search=\"+search+\"&page=\"+page+\"&limit=\"+limit)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  addVideo(body) {\n    return new Promise((resolve, reject) => {\n      HTTPClient.post(\"/mux/save\", body)\n        .then((response) => {\n          resolve({ response: response.data.data });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n}\n\nexport default new MuxService();\n"]},"metadata":{},"sourceType":"module"}