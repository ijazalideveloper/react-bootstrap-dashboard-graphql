{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/components/DateRangePicker/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { Card, Row } from \"react-bootstrap\";\nimport services from \"services\";\nimport { useToast } from \"components/Toast\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\n\nconst DateTimeRangePicker = props => {\n  _s();\n\n  const toast = useToast();\n  const animatedComponents = makeAnimated();\n  const [slot, setSlot] = useState(props.slot);\n  const [isEditing, setIsEditing] = useState(false);\n  const [slotSaverButtonText, setslotSaverButtonText] = useState(\"Save slot\");\n  const [startDate, setStartDate] = useState(!props.newSlot ? moment(props.slot.startDate).format(\"M/DD/YYYY hh:mm:ss A\") : moment().startOf(\"hour\").toDate());\n  const [endDate, setEndDate] = useState(!props.newSlot ? moment(props.slot.endDate).format(\"M/DD/YYYY hh:mm:ss A\") : moment().startOf(\"hour\").add(32, \"hour\").toDate());\n  const [userOptions, setUserOptions] = useState(props.defaultValue);\n\n  const handleDates = async (event, picker) => {\n    setIsEditing(true);\n    let startDateMomentFormat = moment(picker.startDate).format(\"YYYY-M-DD HH:mm:ss\");\n    let endDateMomentFormat = moment(picker.endDate).format(\"YYYY-M-DD HH:mm:ss\");\n    let stDate = new Date(picker.startDate).toISOString();\n    let edDate = new Date(picker.endDate).toISOString();\n    let objectSlot = {\n      startDate: stDate,\n      endDate: edDate\n    };\n    await services.ClassService.checkSlot(objectSlot).then(res => {\n      toast.add(\"tr\", \"success\", \"Slot is Available\");\n      setStartDate(startDateMomentFormat);\n      setEndDate(endDateMomentFormat);\n      setIsEditing(false);\n      setslotSaverButtonText(\"Save slot\");\n    }).catch(error => {\n      toast.add(\"tr\", \"danger\", \"Slot Unavailable\");\n      setslotSaverButtonText(\"Slot Unavailable\");\n      return;\n    });\n  };\n\n  const saveSlot = async () => {\n    if (!userOptions.length) {\n      toast.add(\"tr\", \"danger\", \"Add Slot Users\");\n      return;\n    }\n\n    slot.startDate = startDate;\n    slot.users = userOptions;\n    slot.endDate = endDate;\n    slot.toggle = false;\n    props.handleDates(slot, props.newSlot);\n  };\n\n  const handleChange = selectedOption => {\n    setUserOptions(selectedOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(DateRangePicker, {\n      className: \"\",\n      onApply: handleDates,\n      initialSettings: {\n        parentEl: \".unique-class\",\n        timePicker: true,\n        startDate: startDate,\n        endDate: endDate,\n        locale: {\n          format: \"M/DD hh:mm:ss A\"\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control col-sm-5 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: \"col-sm-5 \",\n      closeMenuOnSelect: false,\n      components: animatedComponents,\n      defaultValue: props.defaultValue,\n      isMulti: true,\n      placeholder: \"Select Class Trainer\",\n      onChange: handleChange,\n      options: props.options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: isEditing ? true : false,\n      className: \"btn btn-success mr-2 btn-wd btn-fill\",\n      onClick: !isEditing ? saveSlot : null,\n      children: slotSaverButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DateTimeRangePicker, \"gV5b/JTkR7obOziDA7aGUvjMYJU=\", false, function () {\n  return [useToast];\n});\n\n_c = DateTimeRangePicker;\nexport default DateTimeRangePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateTimeRangePicker\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/components/DateRangePicker/index.js"],"names":["React","useState","moment","Card","Row","services","useToast","DateRangePicker","Select","makeAnimated","DateTimeRangePicker","props","toast","animatedComponents","slot","setSlot","isEditing","setIsEditing","slotSaverButtonText","setslotSaverButtonText","startDate","setStartDate","newSlot","format","startOf","toDate","endDate","setEndDate","add","userOptions","setUserOptions","defaultValue","handleDates","event","picker","startDateMomentFormat","endDateMomentFormat","stDate","Date","toISOString","edDate","objectSlot","ClassService","checkSlot","then","res","catch","error","saveSlot","length","users","toggle","handleChange","selectedOption","parentEl","timePicker","locale","options"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { Card, Row } from \"react-bootstrap\";\nimport services from \"services\";\nimport { useToast } from \"components/Toast\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\n\nconst DateTimeRangePicker = (props) => {\n  const toast = useToast();\n  const animatedComponents = makeAnimated();\n  const [slot, setSlot] = useState(props.slot);\n  const [isEditing, setIsEditing] = useState(false);\n  const [slotSaverButtonText,setslotSaverButtonText] = useState(\"Save slot\");\n  const [startDate, setStartDate] = useState(\n    !props.newSlot\n      ? moment(props.slot.startDate).format(\"M/DD/YYYY hh:mm:ss A\")\n      : moment().startOf(\"hour\").toDate()\n  );\n  const [endDate, setEndDate] = useState(\n    !props.newSlot\n      ? moment(props.slot.endDate).format(\"M/DD/YYYY hh:mm:ss A\")\n      : moment().startOf(\"hour\").add(32, \"hour\").toDate()\n  );\n  const [userOptions, setUserOptions] = useState(props.defaultValue);\n\n  const handleDates = async (event, picker) => {\n    setIsEditing(true);\n    let startDateMomentFormat = moment(picker.startDate).format(\"YYYY-M-DD HH:mm:ss\");\n    let endDateMomentFormat = moment(picker.endDate).format(\"YYYY-M-DD HH:mm:ss\");\n    \n    let stDate = new Date(picker.startDate).toISOString();\n    let edDate = new Date(picker.endDate).toISOString();\n\n    let objectSlot = {\n      startDate: stDate,\n      endDate: edDate,\n    };\n    await services.ClassService.checkSlot(objectSlot)\n      .then((res) => {\n        toast.add(\"tr\", \"success\", \"Slot is Available\");\n        setStartDate(startDateMomentFormat);\n        setEndDate(endDateMomentFormat);\n        setIsEditing(false);\n        setslotSaverButtonText(\"Save slot\");\n      })\n      .catch((error) => {\n        toast.add(\"tr\", \"danger\", \"Slot Unavailable\");\n        setslotSaverButtonText(\"Slot Unavailable\");\n        return;\n      });\n  };\n\n  const saveSlot = async () => {\n    if (!userOptions.length) {\n      toast.add(\"tr\", \"danger\", \"Add Slot Users\");\n      return;\n    }\n    slot.startDate = startDate;\n    slot.users = userOptions;\n    slot.endDate = endDate;\n    slot.toggle = false;\n\n    props.handleDates(slot, props.newSlot);\n  };\n\n  const handleChange = (selectedOption) => {\n    setUserOptions(selectedOption);\n  };\n  return (\n    <div className=\"d-flex mt-2\">\n      <DateRangePicker\n        className=\"\"\n        onApply={handleDates}\n        initialSettings={{\n          parentEl: \".unique-class\",\n          timePicker: true,\n          startDate: startDate,\n          endDate: endDate,\n          locale: {\n            format: \"M/DD hh:mm:ss A\",\n          },\n        }}\n      >\n        <input type=\"text\" className=\"form-control col-sm-5 \" />\n      </DateRangePicker>\n      <Select\n        className=\"col-sm-5 \"\n        closeMenuOnSelect={false}\n        components={animatedComponents}\n        defaultValue={props.defaultValue}\n        isMulti\n        placeholder=\"Select Class Trainer\"\n        onChange={handleChange}\n        options={props.options}\n      />\n      <button\n        type=\"button\"\n        disabled={isEditing ? true : false}\n        className=\"btn btn-success mr-2 btn-wd btn-fill\"\n        onClick={!isEditing ? saveSlot : null}\n      >\n        {slotSaverButtonText}\n      </button>\n    </div>\n  );\n};\n\nexport default DateTimeRangePicker;\n"]},"metadata":{},"sourceType":"module"}