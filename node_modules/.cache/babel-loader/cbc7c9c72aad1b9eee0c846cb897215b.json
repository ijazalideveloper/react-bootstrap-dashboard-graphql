{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Recipes/createOrEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport services from \"services\";\nimport Select from \"react-select\";\nimport Loader from \"components/Loader\";\nimport makeAnimated from \"react-select/animated\";\nimport MaskedInput from \"react-text-mask\";\nimport FileUpload from \"components/FileUpload/UploadFile\";\nimport Ingredients from \"./Ingredients\";\nimport RecipeSteps from \"./RecipeSteps\";\nimport moment from \"moment\";\n\nconst AddOrEditRecipe = props => {\n  _s();\n\n  const toast = useToast();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(null);\n  const [disable, setDisable] = useState(false);\n  const animatedComponents = makeAnimated();\n  const [recipeCategories, setRecipeCategories] = useState();\n  const [selectedRecipeCat, setSelectedRecipeCat] = useState();\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    difficultyLevel: \"Easy\",\n    calories: \"0\",\n    ingredients: [],\n    duration: \"\",\n    steps: [],\n    icon: \"\",\n    disabled: 0,\n    categories: []\n  });\n\n  const handleValidations = values => {\n    const errors = {};\n\n    if (!values.deletedAt) {\n      if (!values.name) {\n        errors.name = \"* This field is required\";\n      }\n\n      if (!values.calories) {\n        errors.calories = \"* This field is required\";\n      }\n\n      if (!values.duration) {\n        errors.duration = \"* This field is required\";\n      }\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    if (!values.deletedAt) {\n      if (!values.icon) {\n        toast.add(\"tr\", \"danger\", \"Icon is required\");\n        return;\n      }\n\n      if (!values.steps) {\n        toast.add(\"tr\", \"danger\", \"add at least one step\");\n        return;\n      }\n\n      if (!values.ingredients) {\n        toast.add(\"tr\", \"danger\", \"add at least one ingredient\");\n        return;\n      }\n\n      if (!values.categories) {\n        toast.add(\"tr\", \"danger\", \"No category selected\");\n        return;\n      }\n    }\n\n    let recipeObj = {\n      name: values.name,\n      difficultyLevel: values.difficultyLevel,\n      calories: parseInt(values.calories),\n      ingredients: JSON.stringify(values.ingredients),\n      duration: values.duration,\n      steps: JSON.stringify(values.steps),\n      icon: values.icon,\n      categories: values.categories\n    };\n\n    if (values.deletedAt) {\n      recipeObj.deletedAt = values.deletedAt;\n    }\n\n    isEditing ? recipeObj[\"id\"] = values.id : null;\n    isEditing ? services.RecipeService.updateRecipe(recipeObj).then(response => {\n      if (values.deletedAt) {\n        toast.add(\"tr\", \"primary\", \"Recipe Deleted\");\n      } else {\n        toast.add(\"tr\", \"primary\", \"Recipe Updated\");\n      }\n\n      goBack();\n    }) : services.RecipeService.addRecipe(recipeObj).then(response => {\n      goBack();\n      toast.add(\"tr\", \"primary\", \"Recipe Created\");\n      goBack();\n    }).catch(error => {\n      toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n      console.log(error);\n      goBack();\n    });\n    setSubmitting(false);\n    setDisable(true);\n  };\n\n  const getCat = async () => {\n    services.RecipeService.getAllCategories().then(res => {\n      let categories = res.response;\n      let options = categories === null || categories === void 0 ? void 0 : categories.map(item => {\n        let option = {\n          value: item.id,\n          label: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.icon,\n              height: \"30px\",\n              width: \"30px\",\n              style: {\n                padding: 3,\n                marginRight: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        };\n        return option;\n      });\n      setRecipeCategories(options);\n    }).catch(error => console.log(error));\n  };\n\n  const getData = async () => {\n    try {\n      var _props$match, _props$match$params;\n\n      let id = props === null || props === void 0 ? void 0 : (_props$match = props.match) === null || _props$match === void 0 ? void 0 : (_props$match$params = _props$match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id;\n\n      if (id) {\n        var _data$categories;\n\n        let data = await services.RecipeService.getRecipeById(id);\n        data = data.response;\n        let categories = (_data$categories = data.categories) === null || _data$categories === void 0 ? void 0 : _data$categories.map(item => {\n          let option = {\n            value: item.id,\n            label: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.icon,\n                height: \"30px\",\n                width: \"30px\",\n                style: {\n                  padding: 3,\n                  marginRight: 3\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), item.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          };\n          return option;\n        });\n        data[\"categories\"] = categories;\n        console.log(data);\n\n        if (!data) {\n          throw Error(\"Recipe not Found\");\n        }\n\n        setInitialValues(data);\n      } else {}\n\n      setIsEditing(id);\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      console.log(\"err.response\", err.response);\n      toast.add(\"tr\", \"danger\", err.message || (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.code) || \"Something went wrong\");\n      goBack();\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getCat();\n    getData();\n  }, []);\n\n  const goBack = () => props.history.push(\"/admin/recipes\");\n\n  return !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validate: handleValidations,\n      onSubmit: handleSubmit,\n      children: ({\n        isSubmitting,\n        values,\n        errors,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [isEditing ? \"Edit\" : \"Create\", \" Recipe\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-light mr-2  \",\n              type: \"button\",\n              onClick: () => goBack(),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary mr-2  btn-fill \",\n              type: \"submit\",\n              disabled: disable,\n              onClick: () => {\n                setFieldValue(\"deletedAt\", new Date(moment().format(\"YYYY-M-DD HH:mm:ss\")));\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success mr-2  btn-fill\",\n              type: \"submit\",\n              disabled: disable // disabled={isSubmitting}\n              ,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"name\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"name\",\n                  component: \"small\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Recipe Categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"categories\",\n                  defaultValue: values.categories,\n                  closeMenuOnSelect: false,\n                  components: animatedComponents,\n                  isMulti: true,\n                  placeholder: \"Select Recipe Categories\",\n                  onChange: selectedOption => {\n                    let categories = selectedOption.map(cat => {\n                      return cat.value;\n                    });\n                    setFieldValue(\"categories\", categories);\n                    setSelectedRecipeCat(selectedOption);\n                  },\n                  options: recipeCategories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Dificulty Level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkbox-group form-control\",\n                  role: \"group\",\n                  \"aria-labelledby\": \"checkbox-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"radio-btn\",\n                    children: [/*#__PURE__*/_jsxDEV(Field, {\n                      type: \"radio\",\n                      name: \"difficultyLevel\",\n                      value: \"Easy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-check-inline\",\n                      children: \"Easy\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"radio-btn\",\n                    children: [/*#__PURE__*/_jsxDEV(Field, {\n                      type: \"radio\",\n                      name: \"difficultyLevel\",\n                      value: \"Normal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-check-inline\",\n                      children: \"Normal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"radio-btn\",\n                    children: [/*#__PURE__*/_jsxDEV(Field, {\n                      type: \"radio\",\n                      name: \"difficultyLevel\",\n                      value: \"Hard\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-check-inline\",\n                      children: \"Hard\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Calories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"calories\",\n                  className: \"form-control\",\n                  type: \"text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"calories\",\n                  component: \"small\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Add Recipe Duration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MaskedInput, {\n                  name: \"duration\",\n                  id: \"duration\",\n                  value: values.duration,\n                  className: \"form-control\",\n                  mask: [/[0-9]/, /[0-9]/, \":\", /[0-9]/, /[0-9]/],\n                  placeholder: \"minute : second\",\n                  onChange: e => setFieldValue(\"duration\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"duration\",\n                  component: \"small\",\n                  className: \"text-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n                name: \"icon\",\n                setFieldValue: setFieldValue,\n                type: \"image\",\n                link: values.icon,\n                error: errors.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Recipe Ingredients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Ingredients, {\n                  ingredients: values.ingredients,\n                  setFieldValue: setFieldValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-6 form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"\",\n                  children: \"Recipe Steps\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RecipeSteps, {\n                  steps: values.steps,\n                  setFieldValue: setFieldValue\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddOrEditRecipe, \"KL4PHQMXpr7InymqpGwXtSX6zbw=\", false, function () {\n  return [useToast];\n});\n\n_c = AddOrEditRecipe;\nexport default AddOrEditRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddOrEditRecipe\");","map":{"version":3,"sources":["/Users/sadiqsoomro/Documents/ijaz/aimfit_frontend_upload/src/views/Recipes/createOrEdit.js"],"names":["React","useState","useEffect","Card","Row","Formik","Form","Field","ErrorMessage","useToast","services","Select","Loader","makeAnimated","MaskedInput","FileUpload","Ingredients","RecipeSteps","moment","AddOrEditRecipe","props","toast","isLoading","setIsLoading","isEditing","setIsEditing","disable","setDisable","animatedComponents","recipeCategories","setRecipeCategories","selectedRecipeCat","setSelectedRecipeCat","initialValues","setInitialValues","name","difficultyLevel","calories","ingredients","duration","steps","icon","disabled","categories","handleValidations","values","errors","deletedAt","handleSubmit","setSubmitting","add","recipeObj","parseInt","JSON","stringify","id","RecipeService","updateRecipe","then","response","goBack","addRecipe","catch","error","console","log","getCat","getAllCategories","res","options","map","item","option","value","label","padding","marginRight","getData","match","params","data","getRecipeById","Error","err","message","code","history","push","isSubmitting","setFieldValue","Date","format","selectedOption","cat","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Row } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useToast } from \"components/Toast\";\nimport services from \"services\";\nimport Select from \"react-select\";\nimport Loader from \"components/Loader\";\nimport makeAnimated from \"react-select/animated\";\nimport MaskedInput from \"react-text-mask\";\nimport FileUpload from \"components/FileUpload/UploadFile\";\nimport Ingredients from \"./Ingredients\";\nimport RecipeSteps from \"./RecipeSteps\";\nimport moment from \"moment\";\nconst AddOrEditRecipe = (props) => {\n  const toast = useToast();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(null);\n  const [disable, setDisable] = useState(false);\n  const animatedComponents = makeAnimated();\n  const [recipeCategories, setRecipeCategories] = useState();\n  const [selectedRecipeCat, setSelectedRecipeCat] = useState();\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    difficultyLevel: \"Easy\",\n    calories: \"0\",\n    ingredients: [],\n    duration: \"\",\n    steps: [],\n    icon: \"\",\n    disabled: 0,\n    categories: [],\n  });\n\n  const handleValidations = (values) => {\n    const errors = {};\n    if (!values.deletedAt) {\n      if (!values.name) {\n        errors.name = \"* This field is required\";\n      }\n      if (!values.calories) {\n        errors.calories = \"* This field is required\";\n      }\n      if (!values.duration) {\n        errors.duration = \"* This field is required\";\n      }\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    if (!values.deletedAt) {\n      if (!values.icon) {\n        toast.add(\"tr\", \"danger\", \"Icon is required\");\n        return;\n      }\n      if (!values.steps) {\n        toast.add(\"tr\", \"danger\", \"add at least one step\");\n        return;\n      }\n      if (!values.ingredients) {\n        toast.add(\"tr\", \"danger\", \"add at least one ingredient\");\n        return;\n      }\n      if (!values.categories) {\n        toast.add(\"tr\", \"danger\", \"No category selected\");\n        return;\n      }\n    }\n    let recipeObj = {\n      name: values.name,\n      difficultyLevel: values.difficultyLevel,\n      calories: parseInt(values.calories),\n      ingredients: JSON.stringify(values.ingredients),\n      duration: values.duration,\n      steps: JSON.stringify(values.steps),\n      icon: values.icon,\n      categories: values.categories,\n    };\n    if (values.deletedAt) {\n      recipeObj.deletedAt = values.deletedAt;\n    }\n    isEditing ? (recipeObj[\"id\"] = values.id) : null;\n    isEditing\n      ? services.RecipeService.updateRecipe(recipeObj).then((response) => {\n          if (values.deletedAt) {\n            toast.add(\"tr\", \"primary\", \"Recipe Deleted\");\n          } else {\n            toast.add(\"tr\", \"primary\", \"Recipe Updated\");\n          }\n          goBack();\n        })\n      : services.RecipeService.addRecipe(recipeObj)\n          .then((response) => {\n            goBack();\n            toast.add(\"tr\", \"primary\", \"Recipe Created\");\n            goBack();\n          })\n\n          .catch((error) => {\n            toast.add(\"tr\", \"danger\", \"Something Bad Happened\");\n            console.log(error);\n            goBack();\n          });\n\n    setSubmitting(false);\n    setDisable(true);\n  };\n  const getCat = async () => {\n    services.RecipeService.getAllCategories()\n      .then((res) => {\n        let categories = res.response;\n\n        let options = categories?.map((item) => {\n          let option = {\n            value: item.id,\n            label: (\n              <div>\n                <img\n                  src={item.icon}\n                  height=\"30px\"\n                  width=\"30px\"\n                  style={{ padding: 3, marginRight: 3 }}\n                />\n                {item.name}\n              </div>\n            ),\n          };\n          return option;\n        });\n\n        setRecipeCategories(options);\n      })\n      .catch((error) => console.log(error));\n  };\n  const getData = async () => {\n    try {\n      let id = props?.match?.params?.id;\n      if (id) {\n        let data = await services.RecipeService.getRecipeById(id);\n\n        data = data.response;\n        let categories = data.categories?.map((item) => {\n          let option = {\n            value: item.id,\n            label: (\n              <div>\n                <img\n                  src={item.icon}\n                  height=\"30px\"\n                  width=\"30px\"\n                  style={{ padding: 3, marginRight: 3 }}\n                />\n                {item.name}\n              </div>\n            ),\n          };\n          return option;\n        });\n        data[\"categories\"] = categories;\n        console.log(data);\n        if (!data) {\n          throw Error(\"Recipe not Found\");\n        }\n        setInitialValues(data);\n      } else {\n      }\n      setIsEditing(id);\n    } catch (err) {\n      console.log(\"err.response\", err.response);\n\n      toast.add(\n        \"tr\",\n        \"danger\",\n        err.message || err?.response?.data?.code || \"Something went wrong\"\n      );\n\n      goBack();\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getCat();\n    getData();\n  }, []);\n\n  const goBack = () => props.history.push(\"/admin/recipes\");\n  return !isLoading ? (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validate={handleValidations}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, values, errors, setFieldValue }) => (\n          <Form>\n            <Row>\n              <div className=\"col\">\n                <div className=\"row\">\n                  <div className=\"col-sm-4\">\n                    <h2>{isEditing ? \"Edit\" : \"Create\"} Recipe</h2>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-auto\">\n                <button\n                  className=\"btn btn-light mr-2  \"\n                  type=\"button\"\n                  onClick={() => goBack()}\n                >\n                  Back\n                </button>\n                {isEditing && (\n                  <button\n                    className=\"btn btn-secondary mr-2  btn-fill \"\n                    type=\"submit\"\n                    disabled={disable}\n                    onClick={() => {\n                      setFieldValue(\n                        \"deletedAt\",\n                        new Date(moment().format(\"YYYY-M-DD HH:mm:ss\"))\n                      );\n                    }}\n                  >\n                    Delete\n                  </button>\n                )}\n                <button\n                  className=\"btn btn-success mr-2  btn-fill\"\n                  type=\"submit\"\n                  disabled={disable}\n                  // disabled={isSubmitting}\n                >\n                  Save\n                </button>\n              </div>\n            </Row>\n\n            <Card>\n              <Card.Body>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Name</label>\n                    <Field name=\"name\" className=\"form-control\" type=\"text\" />\n                    <ErrorMessage\n                      name=\"name\"\n                      component=\"small\"\n                      className=\"text-danger\"\n                    />\n                  </div>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Recipe Categories</label>\n                    <Select\n                      name=\"categories\"\n                      defaultValue={values.categories}\n                      closeMenuOnSelect={false}\n                      components={animatedComponents}\n                      isMulti\n                      placeholder=\"Select Recipe Categories\"\n                      onChange={(selectedOption) => {\n                        let categories = selectedOption.map((cat) => {\n                          return cat.value;\n                        });\n\n                        setFieldValue(\"categories\", categories);\n                        setSelectedRecipeCat(selectedOption);\n                      }}\n                      options={recipeCategories}\n                    />\n                  </div>\n                </Row>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Dificulty Level</label>\n                    <div\n                      className=\"checkbox-group form-control\"\n                      role=\"group\"\n                      aria-labelledby=\"checkbox-group\"\n                    >\n                      <div className=\"radio-btn\">\n                        <Field\n                          type=\"radio\"\n                          name=\"difficultyLevel\"\n                          value=\"Easy\"\n                        />\n                        <label className=\"form-check-inline\">Easy</label>\n                      </div>\n                      <div className=\"radio-btn\">\n                        <Field\n                          type=\"radio\"\n                          name=\"difficultyLevel\"\n                          value=\"Normal\"\n                        />\n                        <label className=\"form-check-inline\">Normal</label>\n                      </div>\n                      <div className=\"radio-btn\">\n                        <Field\n                          type=\"radio\"\n                          name=\"difficultyLevel\"\n                          value=\"Hard\"\n                        />\n                        <label className=\"form-check-inline\">Hard</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Calories</label>\n                    <Field\n                      name=\"calories\"\n                      className=\"form-control\"\n                      type=\"text\"\n                    />\n                    <ErrorMessage\n                      name=\"calories\"\n                      component=\"small\"\n                      className=\"text-danger\"\n                    />\n                  </div>\n                </Row>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label>Add Recipe Duration</label>\n\n                    <MaskedInput\n                      name=\"duration\"\n                      id=\"duration\"\n                      value={values.duration}\n                      className=\"form-control\"\n                      mask={[/[0-9]/, /[0-9]/, \":\", /[0-9]/, /[0-9]/]}\n                      placeholder=\"minute : second\"\n                      onChange={(e) =>\n                        setFieldValue(\"duration\", e.target.value)\n                      }\n                    />\n                    <ErrorMessage\n                      name=\"duration\"\n                      component=\"small\"\n                      className=\"text-danger\"\n                    />\n                  </div>\n                  <FileUpload\n                    name=\"icon\"\n                    setFieldValue={setFieldValue}\n                    type=\"image\"\n                    link={values.icon}\n                    error={errors.icon}\n                  />\n                </Row>\n                <Row>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Recipe Ingredients</label>\n                    <Ingredients\n                      ingredients={values.ingredients}\n                      setFieldValue={setFieldValue}\n                    />\n                  </div>\n                  <div className=\"col-sm-6 form-group\">\n                    <label htmlFor=\"\">Recipe Steps</label>\n                    <RecipeSteps\n                      steps={values.steps}\n                      setFieldValue={setFieldValue}\n                    />\n                  </div>\n                </Row>\n              </Card.Body>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default AddOrEditRecipe;\n"]},"metadata":{},"sourceType":"module"}